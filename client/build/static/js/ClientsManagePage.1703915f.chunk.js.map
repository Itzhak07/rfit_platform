{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/ClientsTable.js","layouts/ClientsManagePage.js"],"names":["_toConsumableArray","arr","Array","isArray","i","arr2","length","iter","Symbol","iterator","Object","prototype","toString","call","from","TypeError","ErrorAlert","lazy","useStyles","makeStyles","root","width","overflowX","table","ClientsTable","clients","createClient","updateClient","alerts","useState","columns","data","state","setState","classes","useEffect","title","field","render","rowData","to","_id","firstName","cellStyle","fontWeight","color","transform","lookup","Male","Female","editable","initialEditValue","1","2","Paper","variant","className","onRowClick","event","options","pageSize","filtering","onRowAdd","newData","Promise","resolve","setTimeout","prevState","push","onRowUpdate","oldData","indexOf","fallback","map","alert","msg","err","message","connect","loading","Spinner"],"mappings":"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","file":"static/js/ClientsManagePage.1703915f.chunk.js","sourcesContent":["import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","import React, { useState, useEffect, Suspense, lazy } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport \"moment-timezone\";\r\nimport MaterialTable from \"material-table\";\r\nimport { Paper } from \"@material-ui/core\";\r\nconst ErrorAlert = lazy(() => import(\"./ErrorAlert\"));\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\",\r\n    overflowX: \"auto\"\r\n  },\r\n  table: {\r\n    // padding: 20\r\n  }\r\n});\r\n\r\nexport default function ClientsTable({\r\n  clients,\r\n  createClient,\r\n  updateClient,\r\n  alerts\r\n}) {\r\n  const [state, setState] = useState({\r\n    columns: [],\r\n    data: []\r\n  });\r\n\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    setState({\r\n      columns: [\r\n        {\r\n          title: \"First Name\",\r\n          field: \"firstName\",\r\n          render: rowData => (\r\n            <Link to={\"/dashboard/clients/\" + rowData._id}>\r\n              {rowData.firstName}\r\n            </Link>\r\n          ),\r\n          cellStyle: {\r\n            fontWeight: 600,\r\n            color: \"#039be5\",\r\n            transform: \" scale(1.2)\"\r\n          }\r\n        },\r\n        {\r\n          title: \"Last Name\",\r\n          field: \"lastName\"\r\n        },\r\n        { title: \"Email\", field: \"email\" },\r\n        { title: \"Phone\", field: \"phone\" },\r\n        {\r\n          title: \"Gender\",\r\n          field: \"gender\",\r\n          lookup: { Male: \"Male\", Female: \"Female\" }\r\n        },\r\n        {\r\n          title: \"Status\",\r\n          field: \"status\",\r\n          editable: \"onUpdate\",\r\n          initialEditValue: 1,\r\n          lookup: { 1: \"Active\", 2: \"Not-Active\" }\r\n        }\r\n      ],\r\n      data: clients\r\n    });\r\n  }, [clients]);\r\n\r\n  return (\r\n    <Paper variant=\"outlined\">\r\n      <div className={classes.root}>\r\n        <MaterialTable\r\n          title=\"Clients Mangament\"\r\n          className={classes.table}\r\n          columns={state.columns}\r\n          data={state.data}\r\n          onRowClick={(event, rowData) => {}}\r\n          options={{ pageSize: 10, filtering: true }}\r\n          editable={{\r\n            onRowAdd: newData =>\r\n              new Promise(resolve => {\r\n                setTimeout(() => {\r\n                  createClient(newData);\r\n                  resolve();\r\n                  setState(prevState => {\r\n                    const data = [...prevState.data];\r\n                    data.push(newData);\r\n                    return { ...prevState, data };\r\n                  });\r\n                }, 600);\r\n              }),\r\n            onRowUpdate: (newData, oldData) =>\r\n              new Promise(resolve => {\r\n                setTimeout(() => {\r\n                  updateClient(newData);\r\n                  resolve();\r\n                  if (oldData) {\r\n                    setState(prevState => {\r\n                      const data = [...prevState.data];\r\n                      data[data.indexOf(oldData)] = newData;\r\n                      return { ...prevState, data };\r\n                    });\r\n                  }\r\n                }, 600);\r\n              })\r\n          }}\r\n        />\r\n        {alerts ? (\r\n          <Suspense fallback={<div>Loading...</div>}>\r\n            {alerts.map(alert => {\r\n              return alert.msg.map(err => {\r\n                return <ErrorAlert message={err} />;\r\n              });\r\n            })}\r\n          </Suspense>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { createClient, updateClient } from \"../actions/clientActions\";\r\nimport ClientsTable from \"../components/ClientsTable\";\r\nimport { Spinner } from \"./Spinner\";\r\n\r\nconst ClientsManagePage = ({\r\n  createClient,\r\n  updateClient,\r\n  clients,\r\n  loading,\r\n  alerts\r\n}) => {\r\n  return (\r\n    <div className=\"conatiner\">\r\n      {loading ? (\r\n        <Spinner />\r\n      ) : (\r\n        <ClientsTable\r\n          clients={clients}\r\n          createClient={createClient}\r\n          updateClient={updateClient}\r\n          alerts={alerts}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nClientsManagePage.propTypes = {\r\n  clients: PropTypes.array.isRequired,\r\n  createClient: PropTypes.func.isRequired,\r\n  updateClient: PropTypes.func.isRequired,\r\n  loading: PropTypes.bool.isRequired,\r\n  alerts: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  clients: state.clients.clients,\r\n  loading: state.clients.loading,\r\n  alerts: state.alerts.alerts\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  createClient,\r\n  updateClient\r\n})(ClientsManagePage);\r\n"],"sourceRoot":""}