{"version":3,"sources":["../node_modules/@material-ui/core/esm/Card/Card.js","../node_modules/@material-ui/core/esm/CardContent/CardContent.js","components/AccountProfile.js"],"names":["Card","React","forwardRef","props","ref","classes","className","_props$raised","raised","other","_objectWithoutProperties","createElement","Paper","_extends","clsx","root","elevation","withStyles","overflow","name","CardContent","_props$component","component","Component","padding","paddingBottom","useStyles","makeStyles","theme","width","details","display","flexFlow","height","alignItems","justifyContent","avatarWrapper","flexGrow","avatar","connect","state","user","auth","gutterBottom","variant","firstName","lastName","locationText","color","email","dateText","moment","date","format","src"],"mappings":"mGAAA,gEAaIA,EAAOC,IAAMC,YAAW,SAAcC,EAAOC,GAC/C,IAAIC,EAAUF,EAAME,QAChBC,EAAYH,EAAMG,UAClBC,EAAgBJ,EAAMK,OACtBA,OAA2B,IAAlBD,GAAmCA,EAC5CE,EAAQC,YAAyBP,EAAO,CAAC,UAAW,YAAa,WAErE,OAAOF,IAAMU,cAAcC,IAAOC,YAAS,CACzCP,UAAWQ,YAAKT,EAAQU,KAAMT,GAC9BU,UAAWR,EAAS,EAAI,EACxBJ,IAAKA,GACJK,OAwBUQ,gBAzCK,CAElBF,KAAM,CACJG,SAAU,WAsCoB,CAChCC,KAAM,WADOF,CAEZjB,I,iCClDH,uDAeIoB,EAAcnB,IAAMC,YAAW,SAAqBC,EAAOC,GAC7D,IAAIC,EAAUF,EAAME,QAChBC,EAAYH,EAAMG,UAClBe,EAAmBlB,EAAMmB,UACzBC,OAAiC,IAArBF,EAA8B,MAAQA,EAClDZ,EAAQC,YAAyBP,EAAO,CAAC,UAAW,YAAa,cAErE,OAAOF,IAAMU,cAAcY,EAAWV,YAAS,CAC7CP,UAAWQ,YAAKT,EAAQU,KAAMT,GAC9BF,IAAKA,GACJK,OAyBUQ,gBA5CK,CAElBF,KAAM,CACJS,QAAS,GACT,eAAgB,CACdC,cAAe,MAuCa,CAChCN,KAAM,kBADOF,CAEZG,I,iCCpDH,gGAOMM,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCb,KAAM,CACJc,MAAO,QAETC,QAAS,CAEPC,QAAS,OACTC,SAAU,mBACVC,OAAQ,OACRC,WAAY,SACZC,eAAgB,YAElBC,cAAe,CACbC,SAAU,IAEZC,OAAQ,CACNL,OAAQ,GACRJ,MAAO,QA+CIU,uBAJQ,SAAAC,GAAK,MAAK,CAC/BC,KAAMD,EAAME,KAAKD,QAGJF,EA3CQ,SAAC,GAAc,IAAZE,EAAW,EAAXA,KAClBpC,EAAUqB,IAEhB,OACE,kBAAC,IAAD,CAAMpB,UAAWD,EAAQU,MACvB,kBAAC,IAAD,CAAaT,UAAWD,EAAQyB,SAC9B,6BACE,kBAAC,IAAD,CAAYa,cAAY,EAACC,QAAQ,MAC9BH,EAAKI,UADR,IACoBJ,EAAKK,UAEzB,kBAAC,IAAD,CACExC,UAAWD,EAAQ0C,aACnBC,MAAM,gBACNJ,QAAQ,SAEPH,EAAKQ,OAER,kBAAC,IAAD,CACE3C,UAAWD,EAAQ6C,SACnBF,MAAM,gBACNJ,QAAQ,SAHV,gBAKgBO,IAAOV,EAAKW,MAAMC,OAAO,OAG3C,yBAAK/C,UAAWD,EAAQ+B,eACtB,kBAAC,IAAD,CAAQ9B,UAAWD,EAAQiC,OAAQgB,IAAKb,EAAKH","file":"static/js/23.b14b59fb.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport moment from \"moment\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { Card, CardContent, Avatar, Typography } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: \"100%\"\r\n  },\r\n  details: {\r\n    // margin: \"auto\",\r\n    display: \"flex\",\r\n    flexFlow: \"row-reverse wrap\",\r\n    height: \"100%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\"\r\n  },\r\n  avatarWrapper: {\r\n    flexGrow: 0.2\r\n  },\r\n  avatar: {\r\n    height: 90,\r\n    width: 90\r\n  }\r\n}));\r\n\r\nconst AccountProfile = ({ user }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent className={classes.details}>\r\n        <div>\r\n          <Typography gutterBottom variant=\"h4\">\r\n            {user.firstName} {user.lastName}\r\n          </Typography>\r\n          <Typography\r\n            className={classes.locationText}\r\n            color=\"textSecondary\"\r\n            variant=\"body1\"\r\n          >\r\n            {user.email}\r\n          </Typography>\r\n          <Typography\r\n            className={classes.dateText}\r\n            color=\"textSecondary\"\r\n            variant=\"body1\"\r\n          >\r\n            Date Joined: {moment(user.date).format(\"L\")}\r\n          </Typography>\r\n        </div>\r\n        <div className={classes.avatarWrapper}>\r\n          <Avatar className={classes.avatar} src={user.avatar} />\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nAccountProfile.propTypes = {\r\n  className: PropTypes.string,\r\n  user: PropTypes.object,\r\n  loadUser: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToPros = state => ({\r\n  user: state.auth.user\r\n});\r\n\r\nexport default connect(mapStateToPros)(AccountProfile);\r\n"],"sourceRoot":""}