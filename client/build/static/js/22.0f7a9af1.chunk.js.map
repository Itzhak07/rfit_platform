{"version":3,"sources":["../node_modules/@material-ui/core/esm/Card/Card.js","../node_modules/@material-ui/core/esm/CardContent/CardContent.js","../node_modules/@material-ui/core/esm/CardActions/CardActions.js","../node_modules/@material-ui/core/esm/CardHeader/CardHeader.js","components/AccountDetails.js"],"names":["Card","React","forwardRef","props","ref","classes","className","_props$raised","raised","other","_objectWithoutProperties","createElement","Paper","_extends","clsx","root","elevation","withStyles","overflow","name","CardContent","_props$component","component","Component","padding","paddingBottom","CardActions","_props$disableSpacing","disableSpacing","spacing","display","alignItems","marginLeft","CardHeader","action","avatar","_props$disableTypogra","disableTypography","subheaderProp","subheader","subheaderTypographyProps","titleProp","title","titleTypographyProps","type","Typography","variant","color","content","flex","marginRight","alignSelf","marginTop","useStyles","makeStyles","connect","state","user","auth","updateUser","rest","useState","firstName","lastName","values","setValues","disable","setDisable","handleChange","event","target","value","autoComplete","noValidate","onSubmit","e","preventDefault","container","item","md","xs","fullWidth","helperText","label","margin","onChange","required","email","disabled"],"mappings":"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","file":"static/js/22.0f7a9af1.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 8\n  },\n\n  /* Styles applied to the root element if `disableSpacing={false}`. */\n  spacing: {\n    '& > :not(:first-child)': {\n      marginLeft: 8\n    }\n  }\n};\nvar CardActions = React.forwardRef(function CardActions(props, ref) {\n  var _props$disableSpacing = props.disableSpacing,\n      disableSpacing = _props$disableSpacing === void 0 ? false : _props$disableSpacing,\n      classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"disableSpacing\", \"classes\", \"className\"]);\n\n  return React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, !disableSpacing && classes.spacing),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActions.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the actions do not have additional margin.\n   */\n  disableSpacing: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardActions'\n})(CardActions);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 16\n  },\n\n  /* Styles applied to the avatar element. */\n  avatar: {\n    flex: '0 0 auto',\n    marginRight: 16\n  },\n\n  /* Styles applied to the action element. */\n  action: {\n    flex: '0 0 auto',\n    alignSelf: 'flex-start',\n    marginTop: -8,\n    marginRight: -8\n  },\n\n  /* Styles applied to the content wrapper element. */\n  content: {\n    flex: '1 1 auto'\n  },\n\n  /* Styles applied to the title Typography element. */\n  title: {},\n\n  /* Styles applied to the subheader Typography element. */\n  subheader: {}\n};\nvar CardHeader = React.forwardRef(function CardHeader(props, ref) {\n  var action = props.action,\n      avatar = props.avatar,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      subheaderProp = props.subheader,\n      subheaderTypographyProps = props.subheaderTypographyProps,\n      titleProp = props.title,\n      titleTypographyProps = props.titleTypographyProps,\n      other = _objectWithoutProperties(props, [\"action\", \"avatar\", \"classes\", \"className\", \"component\", \"disableTypography\", \"subheader\", \"subheaderTypographyProps\", \"title\", \"titleTypographyProps\"]);\n\n  var title = titleProp;\n\n  if (title != null && title.type !== Typography && !disableTypography) {\n    title = React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'h5',\n      className: classes.title,\n      component: \"span\",\n      display: \"block\"\n    }, titleTypographyProps), title);\n  }\n\n  var subheader = subheaderProp;\n\n  if (subheader != null && subheader.type !== Typography && !disableTypography) {\n    subheader = React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'body1',\n      className: classes.subheader,\n      color: \"textSecondary\",\n      component: \"span\",\n      display: \"block\"\n    }, subheaderTypographyProps), subheader);\n  }\n\n  return React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), avatar && React.createElement(\"div\", {\n    className: classes.avatar\n  }, avatar), React.createElement(\"div\", {\n    className: classes.content\n  }, title, subheader), action && React.createElement(\"div\", {\n    className: classes.action\n  }, action));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardHeader.propTypes = {\n  /**\n   * The action to display in the card header.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The Avatar for the Card Header.\n   */\n  avatar: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `title` text, and optional `subheader` text\n   * with the Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  subheader: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the subheader\n   * (as long as disableTypography is not `true`).\n   */\n  subheaderTypographyProps: PropTypes.object,\n\n  /**\n   * The content of the Card Title.\n   */\n  title: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the title\n   * (as long as disableTypography is not `true`).\n   */\n  titleTypographyProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardHeader'\n})(CardHeader);","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport clsx from \"clsx\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Divider,\r\n  Grid,\r\n  Button,\r\n  TextField\r\n} from \"@material-ui/core\";\r\n\r\nimport { updateUser } from \"../actions/authActions\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst AccountDetails = ({ className, user, updateUser, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  const [values, setValues] = useState({\r\n    firstName: user !== null ? user.firstName : \"\",\r\n    lastName: user !== null ? user.lastName : \"\"\r\n  });\r\n\r\n  const [disable, setDisable] = useState(true);\r\n\r\n  const handleChange = event => {\r\n    setValues({\r\n      ...values,\r\n      [event.target.name]: event.target.value\r\n    });\r\n    setDisable(false);\r\n  };\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    updateUser(values);\r\n    setDisable(true);\r\n  };\r\n\r\n  return (\r\n    <Card {...rest} className={clsx(classes.root, className)}>\r\n      <form autoComplete=\"off\" noValidate onSubmit={e => onSubmit(e)}>\r\n        <CardHeader subheader=\"The information can be edited\" title=\"Profile\" />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid container spacing={3}>\r\n            <Grid item md={6} xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                helperText=\"Please specify the first name\"\r\n                label=\"First name\"\r\n                margin=\"dense\"\r\n                name=\"firstName\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.firstName}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid item md={6} xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Last name\"\r\n                helperText=\"Please specify the last name\"\r\n                margin=\"dense\"\r\n                name=\"lastName\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.lastName}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid item md={6} xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Email Address\"\r\n                margin=\"dense\"\r\n                name=\"email\"\r\n                required\r\n                value={user.email}\r\n                variant=\"outlined\"\r\n                disabled\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <CardActions>\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            type=\"submit\"\r\n            disabled={disable}\r\n          >\r\n            Save details\r\n          </Button>\r\n        </CardActions>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nAccountDetails.propTypes = {\r\n  className: PropTypes.string,\r\n  user: PropTypes.object,\r\n  updateUser: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToPros = state => ({\r\n  user: state.auth.user\r\n});\r\n\r\nexport default connect(mapStateToPros, { updateUser })(AccountDetails);\r\n"],"sourceRoot":""}