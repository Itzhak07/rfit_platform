{"version":3,"sources":["../node_modules/@material-ui/icons/Create.js","../node_modules/@material-ui/icons/Notes.js","../node_modules/@material-ui/icons/Add.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/createSvgIcon.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/Close.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/ArrowDropDown.js","../node_modules/@material-ui/lab/esm/useAutocomplete/useAutocomplete.js","../node_modules/@material-ui/lab/esm/Autocomplete/Autocomplete.js","../node_modules/@material-ui/icons/esm/Info.js","components/Schedule2.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_react","_default","createElement","d","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","_createClass","protoProps","staticProps","prototype","_typeof","obj","Symbol","iterator","constructor","_assertThisInitialized","self","ReferenceError","_possibleConstructorReturn","call","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","_setPrototypeOf","p","_inherits","subClass","superClass","create","createSvgIcon","path","displayName","Component","React","memo","forwardRef","ref","SvgIcon","_extends","muiName","stripDiacritics","string","normalize","replace","defaultStringify","keys","map","join","JSON","stringify","findIndex","array","comp","defaultFilterOptions","config","arguments","undefined","_config$ignoreAccents","ignoreAccents","_config$ignoreCase","ignoreCase","_config$matchFrom","matchFrom","_config$stringify","_config$trim","trim","limit","options","_ref","inputValue","input","toLowerCase","filteredOptions","filter","option","candidate","indexOf","slice","createFilterOptions","useAutocomplete","_props$autoComplete","autoComplete","_props$autoHighlight","autoHighlight","_props$autoSelect","autoSelect","_props$blurOnSelect","blurOnSelect","_props$clearOnEscape","clearOnEscape","_props$debug","debug","_props$defaultValue","defaultValue","multiple","_props$disableClearab","disableClearable","_props$disableCloseOn","disableCloseOnSelect","_props$disableListWra","disableListWrap","_props$disableOpenOnF","disableOpenOnFocus","_props$filterOptions","filterOptions","_props$filterSelected","filterSelectedOptions","_props$freeSolo","freeSolo","getOptionDisabled","_props$getOptionLabel","getOptionLabel","x","_props$getOptionSelec","getOptionSelected","groupBy","idProp","id","_props$includeInputIn","includeInputInList","inputValueProp","_props$multiple","onChange","onClose","onOpen","onInputChange","openProp","open","_props$selectOnFocus","selectOnFocus","valueProp","_props$componentName","componentName","_React$useState","useState","defaultId","setDefaultId","useEffect","concat","Math","round","random","ignoreFocus","useRef","firstFocus","inputRef","listboxRef","_React$useState2","anchorEl","setAnchorEl","_React$useState3","focusedTag","setFocusedTag","defaultHighlighted","highlightedIndexRef","setHighlightedIndex","index","mouse","current","removeAttribute","setAttribute","prev","querySelector","listboxNode","parentElement","scrollHeight","clientHeight","element","scrollBottom","scrollTop","elementBottom","offsetTop","offsetHeight","_useControlled","useControlled","controlled","name","_useControlled2","_slicedToArray","setValue","isInputValueControlled","_React$useState4","inputValueState","setInputValue","_React$useState5","focused","setFocused","resetInputValue","useEventCallback","event","newValue","newInputValue","optionLabel","process","isOpenControlled","_React$useState6","openState","setOpenState","inputValueIsSelectedValue","popupOpen","some","value2","focusTag","tagToFocus","focus","changeHighlightedIndex","diff","direction","nextIndex","nextFocus","hasAttribute","disabled","getAttribute","validOptionIndex","maxIndex","newIndex","abs","getNextIndex","setSelectionRange","handleOpen","handleClose","handleValue","selectNewValue","origin","item","itemIndex","Array","isArray","_toConsumableArray","valueItem","push","splice","handleFocusTag","nextTag","validTagIndex","handleClear","handleKeyDown","other","preventDefault","which","stopPropagation","onKeyDown","handleFocus","handleBlur","handleInputChange","handleOptionMouseOver","Number","currentTarget","isTouch","handleOptionTouchStart","handleOptionClick","blur","handleTagDelete","handleListboxRef","node","setRef","handlePopupIndicator","handleMouseDown","handleClick","selectionEnd","selectionStart","select","handleInputMouseDown","doc","ownerDocument","activeElement","dirty","groupedOptions","result","indexByKey","Map","currentResultIndex","forEach","get","set","indexCounter","getRootProps","role","onMouseDown","onClick","getInputLabelProps","htmlFor","getInputProps","onBlur","onFocus","autoCapitalize","spellCheck","getClearProps","tabIndex","getPopupIndicatorProps","getTagProps","_ref2","onDelete","getListboxProps","getOptionProps","_ref3","selected","onMouseOver","onTouchStart","propTypes","PropTypes","bool","classes","object","className","any","func","DisablePortal","_objectWithoutProperties","CloseIcon","fontSize","ArrowDropDownIcon","Autocomplete","startAdornment","ChipProps","_props$clearText","clearText","_props$closeIcon","closeIcon","_props$closeText","closeText","_props$disabled","_props$disablePortal","disablePortal","_props$forcePopupIcon","forcePopupIcon","_props$ListboxCompone","ListboxComponent","ListboxProps","_props$loading","loading","_props$loadingText","loadingText","_props$noOptionsText","noOptionsText","_props$openText","openText","_props$PaperComponent","PaperComponent","Paper","_props$PopperComponen","PopperComponent","PopperComponentProp","Popper","_props$popupIcon","popupIcon","renderGroupProp","renderGroup","renderInput","renderOptionProp","renderOption","renderTags","_props$size","size","_useAutocomplete","getCustomizedTagProps","params","clsx","tag","tagSizeSmall","Chip","label","ListSubheader","groupLabel","component","groupUl","children","renderListOption","optionProps","hasClearIcon","hasPopupIcon","Fragment","root","fullWidth","InputLabelProps","InputProps","inputRoot","endAdornment","IconButton","title","clearIndicator","clearIndicatorDirty","popupIndicator","popupIndicatorOpen","inputProps","inputFocused","popper","popperDisablePortal","style","width","clientWidth","paper","noOptions","listbox","option2","index2","withStyles","theme","_option","visibility","margin","maxWidth","flexWrap","paddingRight","minWidth","paddingBottom","padding","paddingLeft","right","paddingTop","flexGrow","textOverflow","opacity","position","top","marginRight","color","palette","action","active","transform","zIndex","modal","typography","body1","overflow","maxHeight","listStyle","text","secondary","minHeight","display","justifyContent","alignItems","cursor","boxSizing","outline","WebkitTapHighlightColor","_defineProperty","breakpoints","up","backgroundColor","hover","disabledOpacity","pointerEvents","background","ErrorAlert","lazy","Modal","AppointmentFormContainerBasic","state","appointmentChanges","getAppointmentData","appointmentData","getAppointmentChanges","changeAppointment","bind","commitAppointment","field","changes","nextChanges","this","setState","type","commitChanges","appointment","visible","visibleChange","cancelAppointment","onHide","activeClients","data","displayAppointmentData","clientsOptions","client","_id","firstName","lastName","isNewAppointment","applyChanges","pickerEditorProps","picker","ampm","date","toDate","Date","inputVariant","format","onError","Overlay","header","closeButton","content","wrapper","icon","placeholder","variant","textField","TextField","change","utils","MomentUtils","toUpperCase","multiline","rows","buttonGroup","Button","button","PureComponent","AppointmentFormContainer","container","spacing","float","marginLeft","Schedule2","modalClose","currentDateChange","currentDate","workouts","confirmationVisible","editingFormVisible","deletedAppointmentId","editingAppointment","previousAppointment","addedAppointment","startDayHour","endDayHour","modalBody","alerts","toggleConfirmationVisible","commitDeletedAppointment","toggleEditingFormVisibility","onEditingAppointmentChange","onAddedAppointmentChange","appointmentForm","connectProps","update","added","changed","deleted","createWorkout","values","console","log","updateWorkout","deleteWorkout","workoutData","ToolbarWithLoading","toolbarRoot","progress","bottom","left","restProps","Root","LinearProgress","Header","modalOpen","notes","commandButton","Info","fallback","CircularProgress","alert","msg","err","message","height","onCurrentDateChange","onCommitChanges","cellDuration","showOpenButton","showCloseButton","showDeleteButton","headerComponent","rootComponent","overlayComponent","onVisibilityChange","Fab","addButton","startDate","setHours","endDate","modalTitle","connect","clients"],"mappings":"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","file":"static/js/Schedule.75710ab9.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 00-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Create');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M3 18h12v-2H3v2zM3 6v2h18V6H3zm0 7h18v-2H3v2z\"\n}), 'Notes');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\n\nexports.default = _default;","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import _typeof from \"../../helpers/esm/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nexport default function createSvgIcon(path, displayName) {\n  var Component = React.memo(React.forwardRef(function (props, ref) {\n    return React.createElement(SvgIcon, _extends({\n      ref: ref\n    }, props), path);\n  }));\n\n  if (process.env.NODE_ENV !== 'production') {\n    Component.displayName = \"\".concat(displayName, \"Icon\");\n  }\n\n  Component.muiName = SvgIcon.muiName;\n  return Component;\n}","import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');","import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M7 10l5 5 5-5z\"\n}), 'ArrowDropDown');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\n\n/* eslint-disable no-constant-condition */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { setRef, useEventCallback, useControlled, ownerDocument } from '@material-ui/core/utils'; // https://stackoverflow.com/questions/990904/remove-accents-diacritics-in-a-string-in-javascript\n// Give up on IE 11 support for this feature\n\nfunction stripDiacritics(string) {\n  return typeof string.normalize !== 'undefined' ? string.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '') : string;\n}\n\nfunction defaultStringify(value) {\n  if (value == null) {\n    return '';\n  }\n\n  if (typeof value === 'string') {\n    return value;\n  }\n\n  if (_typeof(value) === 'object') {\n    return Object.keys(value).map(function (key) {\n      return value[key];\n    }).join(' ');\n  }\n\n  return JSON.stringify(value);\n}\n\nexport function createFilterOptions() {\n  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _config$ignoreAccents = config.ignoreAccents,\n      ignoreAccents = _config$ignoreAccents === void 0 ? true : _config$ignoreAccents,\n      _config$ignoreCase = config.ignoreCase,\n      ignoreCase = _config$ignoreCase === void 0 ? true : _config$ignoreCase,\n      _config$matchFrom = config.matchFrom,\n      matchFrom = _config$matchFrom === void 0 ? 'any' : _config$matchFrom,\n      _config$stringify = config.stringify,\n      stringify = _config$stringify === void 0 ? defaultStringify : _config$stringify,\n      _config$trim = config.trim,\n      trim = _config$trim === void 0 ? false : _config$trim,\n      limit = config.limit;\n  return function (options, _ref) {\n    var inputValue = _ref.inputValue;\n    var input = trim ? inputValue.trim() : inputValue;\n\n    if (ignoreCase) {\n      input = input.toLowerCase();\n    }\n\n    if (ignoreAccents) {\n      input = stripDiacritics(input);\n    }\n\n    var filteredOptions = options.filter(function (option) {\n      var candidate = stringify(option);\n\n      if (ignoreCase) {\n        candidate = candidate.toLowerCase();\n      }\n\n      if (ignoreAccents) {\n        candidate = stripDiacritics(candidate);\n      }\n\n      return matchFrom === 'start' ? candidate.indexOf(input) === 0 : candidate.indexOf(input) > -1;\n    });\n    return typeof limit === 'number' ? filteredOptions.slice(0, limit) : filteredOptions;\n  };\n} // To replace with .findIndex() once we stop IE 11 support.\n\nfunction findIndex(array, comp) {\n  for (var i = 0; i < array.length; i += 1) {\n    if (comp(array[i])) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\nvar defaultFilterOptions = createFilterOptions(); // Number of options to jump in list box when pageup and pagedown keys are used.\n\nvar pageSize = 5;\nexport default function useAutocomplete(props) {\n  var _props$autoComplete = props.autoComplete,\n      autoComplete = _props$autoComplete === void 0 ? false : _props$autoComplete,\n      _props$autoHighlight = props.autoHighlight,\n      autoHighlight = _props$autoHighlight === void 0 ? false : _props$autoHighlight,\n      _props$autoSelect = props.autoSelect,\n      autoSelect = _props$autoSelect === void 0 ? false : _props$autoSelect,\n      _props$blurOnSelect = props.blurOnSelect,\n      blurOnSelect = _props$blurOnSelect === void 0 ? false : _props$blurOnSelect,\n      _props$clearOnEscape = props.clearOnEscape,\n      clearOnEscape = _props$clearOnEscape === void 0 ? false : _props$clearOnEscape,\n      _props$debug = props.debug,\n      debug = _props$debug === void 0 ? false : _props$debug,\n      _props$defaultValue = props.defaultValue,\n      defaultValue = _props$defaultValue === void 0 ? props.multiple ? [] : null : _props$defaultValue,\n      _props$disableClearab = props.disableClearable,\n      disableClearable = _props$disableClearab === void 0 ? false : _props$disableClearab,\n      _props$disableCloseOn = props.disableCloseOnSelect,\n      disableCloseOnSelect = _props$disableCloseOn === void 0 ? false : _props$disableCloseOn,\n      _props$disableListWra = props.disableListWrap,\n      disableListWrap = _props$disableListWra === void 0 ? false : _props$disableListWra,\n      _props$disableOpenOnF = props.disableOpenOnFocus,\n      disableOpenOnFocus = _props$disableOpenOnF === void 0 ? false : _props$disableOpenOnF,\n      _props$filterOptions = props.filterOptions,\n      filterOptions = _props$filterOptions === void 0 ? defaultFilterOptions : _props$filterOptions,\n      _props$filterSelected = props.filterSelectedOptions,\n      filterSelectedOptions = _props$filterSelected === void 0 ? false : _props$filterSelected,\n      _props$freeSolo = props.freeSolo,\n      freeSolo = _props$freeSolo === void 0 ? false : _props$freeSolo,\n      getOptionDisabled = props.getOptionDisabled,\n      _props$getOptionLabel = props.getOptionLabel,\n      getOptionLabel = _props$getOptionLabel === void 0 ? function (x) {\n    return x;\n  } : _props$getOptionLabel,\n      _props$getOptionSelec = props.getOptionSelected,\n      getOptionSelected = _props$getOptionSelec === void 0 ? function (option, value) {\n    return option === value;\n  } : _props$getOptionSelec,\n      groupBy = props.groupBy,\n      idProp = props.id,\n      _props$includeInputIn = props.includeInputInList,\n      includeInputInList = _props$includeInputIn === void 0 ? false : _props$includeInputIn,\n      inputValueProp = props.inputValue,\n      _props$multiple = props.multiple,\n      multiple = _props$multiple === void 0 ? false : _props$multiple,\n      onChange = props.onChange,\n      onClose = props.onClose,\n      onOpen = props.onOpen,\n      onInputChange = props.onInputChange,\n      openProp = props.open,\n      options = props.options,\n      _props$selectOnFocus = props.selectOnFocus,\n      selectOnFocus = _props$selectOnFocus === void 0 ? !props.freeSolo : _props$selectOnFocus,\n      valueProp = props.value,\n      _props$componentName = props.componentName,\n      componentName = _props$componentName === void 0 ? 'useAutocomplete' : _props$componentName;\n\n  var _React$useState = React.useState(),\n      defaultId = _React$useState[0],\n      setDefaultId = _React$useState[1];\n\n  var id = idProp || defaultId;\n  React.useEffect(function () {\n    // Fallback to this default id when possible.\n    // Use the random value for client-side rendering only.\n    // We can't use it server-side.\n    setDefaultId(\"mui-autocomplete-\".concat(Math.round(Math.random() * 1e5)));\n  }, []);\n  var ignoreFocus = React.useRef(false);\n  var firstFocus = React.useRef(true);\n  var inputRef = React.useRef(null);\n  var listboxRef = React.useRef(null);\n\n  var _React$useState2 = React.useState(null),\n      anchorEl = _React$useState2[0],\n      setAnchorEl = _React$useState2[1];\n\n  var _React$useState3 = React.useState(-1),\n      focusedTag = _React$useState3[0],\n      setFocusedTag = _React$useState3[1];\n\n  var defaultHighlighted = autoHighlight ? 0 : -1;\n  var highlightedIndexRef = React.useRef(defaultHighlighted);\n\n  function setHighlightedIndex(index) {\n    var mouse = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    highlightedIndexRef.current = index; // does the index exist?\n\n    if (index === -1) {\n      inputRef.current.removeAttribute('aria-activedescendant');\n    } else {\n      inputRef.current.setAttribute('aria-activedescendant', \"\".concat(id, \"-option-\").concat(index));\n    }\n\n    if (!listboxRef.current) {\n      return;\n    }\n\n    var prev = listboxRef.current.querySelector('[data-focus]');\n\n    if (prev) {\n      prev.removeAttribute('data-focus');\n    }\n\n    var listboxNode = listboxRef.current.parentElement.querySelector('[role=\"listbox\"]'); // \"No results\"\n\n    if (!listboxNode) {\n      return;\n    }\n\n    if (index === -1) {\n      listboxNode.scrollTop = 0;\n      return;\n    }\n\n    var option = listboxRef.current.querySelector(\"[data-option-index=\\\"\".concat(index, \"\\\"]\"));\n\n    if (!option) {\n      return;\n    }\n\n    option.setAttribute('data-focus', 'true'); // Scroll active descendant into view.\n    // Logic copied from https://www.w3.org/TR/wai-aria-practices/examples/listbox/js/listbox.js\n    //\n    // Consider this API instead once it has a better browser support:\n    // .scrollIntoView({ scrollMode: 'if-needed', block: 'nearest' });\n\n    if (listboxNode.scrollHeight > listboxNode.clientHeight && !mouse) {\n      var element = option;\n      var scrollBottom = listboxNode.clientHeight + listboxNode.scrollTop;\n      var elementBottom = element.offsetTop + element.offsetHeight;\n\n      if (elementBottom > scrollBottom) {\n        listboxNode.scrollTop = elementBottom - listboxNode.clientHeight;\n      } else if (element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0) < listboxNode.scrollTop) {\n        listboxNode.scrollTop = element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0);\n      }\n    }\n  }\n\n  var _useControlled = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: componentName\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      value = _useControlled2[0],\n      setValue = _useControlled2[1];\n\n  var _React$useRef = React.useRef(inputValueProp != null),\n      isInputValueControlled = _React$useRef.current;\n\n  var _React$useState4 = React.useState(''),\n      inputValueState = _React$useState4[0],\n      setInputValue = _React$useState4[1];\n\n  var inputValue = isInputValueControlled ? inputValueProp : inputValueState;\n\n  var _React$useState5 = React.useState(false),\n      focused = _React$useState5[0],\n      setFocused = _React$useState5[1];\n\n  var resetInputValue = useEventCallback(function (event, newValue) {\n    var newInputValue;\n\n    if (multiple) {\n      newInputValue = '';\n    } else if (newValue == null) {\n      newInputValue = '';\n    } else {\n      var optionLabel = getOptionLabel(newValue);\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (typeof optionLabel !== 'string') {\n          console.error(['Material-UI: the `getOptionLabel` method of useAutocomplete do not handle the options correctly.', \"The component expect a string but received \".concat(_typeof(optionLabel), \".\"), \"For the input option: \".concat(JSON.stringify(newValue), \", `getOptionLabel` returns: \").concat(optionLabel, \".\")].join('\\n'));\n        }\n      }\n\n      newInputValue = typeof optionLabel === 'string' ? optionLabel : '';\n    }\n\n    if (inputValue === newInputValue) {\n      return;\n    }\n\n    setInputValue(newInputValue);\n\n    if (onInputChange) {\n      onInputChange(event, newInputValue, 'reset');\n    }\n  });\n  React.useEffect(function () {\n    resetInputValue(null, value);\n  }, [value, resetInputValue]);\n\n  var _React$useRef2 = React.useRef(openProp != null),\n      isOpenControlled = _React$useRef2.current;\n\n  var _React$useState6 = React.useState(false),\n      openState = _React$useState6[0],\n      setOpenState = _React$useState6[1];\n\n  var open = isOpenControlled ? openProp : openState;\n  var inputValueIsSelectedValue = !multiple && value != null && inputValue === getOptionLabel(value);\n  var popupOpen = open;\n  var filteredOptions = popupOpen ? filterOptions(options.filter(function (option) {\n    if (filterSelectedOptions && (multiple ? value : [value]).some(function (value2) {\n      return value2 !== null && getOptionSelected(option, value2);\n    })) {\n      return false;\n    }\n\n    return true;\n  }), // we use the empty string to manipulate `filterOptions` to not filter any options\n  // i.e. the filter predicate always returns true\n  {\n    inputValue: inputValueIsSelectedValue ? '' : inputValue\n  }) : [];\n  popupOpen = freeSolo && filteredOptions.length === 0 ? false : popupOpen;\n  var focusTag = useEventCallback(function (tagToFocus) {\n    if (tagToFocus === -1) {\n      inputRef.current.focus();\n    } else {\n      anchorEl.querySelector(\"[data-tag-index=\\\"\".concat(tagToFocus, \"\\\"]\")).focus();\n    }\n  }); // Ensure the focusedTag is never inconsistent\n\n  React.useEffect(function () {\n    if (multiple && focusedTag > value.length - 1) {\n      setFocusedTag(-1);\n      focusTag(-1);\n    }\n  }, [value, multiple, focusedTag, focusTag]);\n\n  function validOptionIndex(index, direction) {\n    if (!listboxRef.current || index === -1) {\n      return -1;\n    }\n\n    var nextFocus = index;\n\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === filteredOptions.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n\n      var option = listboxRef.current.querySelector(\"[data-option-index=\\\"\".concat(nextFocus, \"\\\"]\")); // Same logic as MenuList.js\n\n      if (option && (!option.hasAttribute('tabindex') || option.disabled || option.getAttribute('aria-disabled') === 'true')) {\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n\n  var changeHighlightedIndex = function changeHighlightedIndex(diff, direction) {\n    if (!popupOpen) {\n      return;\n    }\n\n    var getNextIndex = function getNextIndex() {\n      var maxIndex = filteredOptions.length - 1;\n\n      if (diff === 'reset') {\n        return defaultHighlighted;\n      }\n\n      if (diff === 'start') {\n        return 0;\n      }\n\n      if (diff === 'end') {\n        return maxIndex;\n      }\n\n      var newIndex = highlightedIndexRef.current + diff;\n\n      if (newIndex < 0) {\n        if (newIndex === -1 && includeInputInList) {\n          return -1;\n        }\n\n        if (disableListWrap && highlightedIndexRef.current !== -1 || Math.abs(diff) > 1) {\n          return 0;\n        }\n\n        return maxIndex;\n      }\n\n      if (newIndex > maxIndex) {\n        if (newIndex === maxIndex + 1 && includeInputInList) {\n          return -1;\n        }\n\n        if (disableListWrap || Math.abs(diff) > 1) {\n          return maxIndex;\n        }\n\n        return 0;\n      }\n\n      return newIndex;\n    };\n\n    var nextIndex = validOptionIndex(getNextIndex(), direction);\n    setHighlightedIndex(nextIndex);\n\n    if (autoComplete && diff !== 'reset') {\n      if (nextIndex === -1) {\n        inputRef.current.value = inputValue;\n      } else {\n        var option = getOptionLabel(filteredOptions[nextIndex]);\n        inputRef.current.value = option; // The portion of the selected suggestion that has not been typed by the user,\n        // a completion string, appears inline after the input cursor in the textbox.\n\n        var index = option.toLowerCase().indexOf(inputValue.toLowerCase());\n\n        if (index === 0 && inputValue.length > 0) {\n          inputRef.current.setSelectionRange(inputValue.length, option.length);\n        }\n      }\n    }\n  };\n\n  React.useEffect(function () {\n    changeHighlightedIndex('reset', 'next');\n  }, [inputValue]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  var handleOpen = function handleOpen(event) {\n    if (open) {\n      return;\n    }\n\n    if (onOpen) {\n      onOpen(event);\n    }\n\n    if (!isOpenControlled) {\n      setOpenState(true);\n    }\n  };\n\n  var handleClose = function handleClose(event) {\n    if (!open) {\n      return;\n    }\n\n    if (onClose) {\n      onClose(event);\n    }\n\n    if (!isOpenControlled) {\n      setOpenState(false);\n    }\n  };\n\n  var handleValue = function handleValue(event, newValue) {\n    if (value === newValue) {\n      return;\n    }\n\n    if (onChange) {\n      onChange(event, newValue);\n    }\n\n    setValue(newValue);\n  };\n\n  var selectNewValue = function selectNewValue(event, newValue) {\n    var origin = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'option';\n\n    if (multiple) {\n      var item = newValue;\n      newValue = Array.isArray(value) ? _toConsumableArray(value) : [];\n\n      if (process.env.NODE_ENV !== 'production') {\n        var matches = newValue.filter(function (val) {\n          return getOptionSelected(item, val);\n        });\n\n        if (matches.length > 1) {\n          console.error(['Material-UI: the `getOptionSelected` method of useAutocomplete do not handle the arguments correctly.', \"The component expects a single value to match a given option but found \".concat(matches.length, \" matches.\")].join('\\n'));\n        }\n      }\n\n      var itemIndex = findIndex(newValue, function (valueItem) {\n        return getOptionSelected(item, valueItem);\n      });\n\n      if (itemIndex === -1) {\n        newValue.push(item);\n      } else if (origin !== 'freeSolo') {\n        newValue.splice(itemIndex, 1);\n      }\n    }\n\n    resetInputValue(event, newValue);\n    handleValue(event, newValue);\n\n    if (!disableCloseOnSelect) {\n      handleClose(event);\n    }\n  };\n\n  function validTagIndex(index, direction) {\n    if (index === -1) {\n      return -1;\n    }\n\n    var nextFocus = index;\n\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === value.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n\n      var option = anchorEl.querySelector(\"[data-tag-index=\\\"\".concat(nextFocus, \"\\\"]\")); // Same logic as MenuList.js\n\n      if (option && (!option.hasAttribute('tabindex') || option.disabled || option.getAttribute('aria-disabled') === 'true')) {\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n\n  var handleFocusTag = function handleFocusTag(event, direction) {\n    if (!multiple) {\n      return;\n    }\n\n    handleClose(event);\n    var nextTag = focusedTag;\n\n    if (focusedTag === -1) {\n      if (inputValue === '' && direction === 'previous') {\n        nextTag = value.length - 1;\n      }\n    } else {\n      nextTag += direction === 'next' ? 1 : -1;\n\n      if (nextTag < 0) {\n        nextTag = 0;\n      }\n\n      if (nextTag === value.length) {\n        nextTag = -1;\n      }\n    }\n\n    nextTag = validTagIndex(nextTag, direction);\n    setFocusedTag(nextTag);\n    focusTag(nextTag);\n  };\n\n  var handleClear = function handleClear(event) {\n    ignoreFocus.current = true;\n    setInputValue('');\n\n    if (onInputChange) {\n      onInputChange(event, '', 'clear');\n    }\n\n    handleValue(event, multiple ? [] : null);\n  };\n\n  var handleKeyDown = function handleKeyDown(other) {\n    return function (event) {\n      if (focusedTag !== -1 && ['ArrowLeft', 'ArrowRight'].indexOf(event.key) === -1) {\n        setFocusedTag(-1);\n        focusTag(-1);\n      }\n\n      switch (event.key) {\n        case 'Home':\n          if (popupOpen) {\n            // Prevent scroll of the page\n            event.preventDefault();\n            changeHighlightedIndex('start', 'next');\n          }\n\n          break;\n\n        case 'End':\n          if (popupOpen) {\n            // Prevent scroll of the page\n            event.preventDefault();\n            changeHighlightedIndex('end', 'previous');\n          }\n\n          break;\n\n        case 'PageUp':\n          // Prevent scroll of the page\n          event.preventDefault();\n          changeHighlightedIndex(-pageSize, 'previous');\n          handleOpen(event);\n          break;\n\n        case 'PageDown':\n          // Prevent scroll of the page\n          event.preventDefault();\n          changeHighlightedIndex(pageSize, 'next');\n          handleOpen(event);\n          break;\n\n        case 'ArrowDown':\n          // Prevent cursor move\n          event.preventDefault();\n          changeHighlightedIndex(1, 'next');\n          handleOpen(event);\n          break;\n\n        case 'ArrowUp':\n          // Prevent cursor move\n          event.preventDefault();\n          changeHighlightedIndex(-1, 'previous');\n          handleOpen(event);\n          break;\n\n        case 'ArrowLeft':\n          handleFocusTag(event, 'previous');\n          break;\n\n        case 'ArrowRight':\n          handleFocusTag(event, 'next');\n          break;\n\n        case 'Enter':\n          // Wait until IME is settled.\n          if (event.which === 229) {\n            break;\n          }\n\n          if (highlightedIndexRef.current !== -1 && popupOpen) {\n            // We don't want to validate the form.\n            event.preventDefault();\n            selectNewValue(event, filteredOptions[highlightedIndexRef.current]); // Move the selection to the end.\n\n            if (autoComplete) {\n              inputRef.current.setSelectionRange(inputRef.current.value.length, inputRef.current.value.length);\n            }\n          } else if (freeSolo && inputValue !== '' && inputValueIsSelectedValue === false) {\n            if (multiple) {\n              // Allow people to add new values before they submit the form.\n              event.preventDefault();\n            }\n\n            selectNewValue(event, inputValue, 'freeSolo');\n          }\n\n          break;\n\n        case 'Escape':\n          if (popupOpen) {\n            // Avoid Opera to exit fullscreen mode.\n            event.preventDefault(); // Avoid the Modal to handle the event.\n\n            event.stopPropagation();\n            handleClose(event);\n          } else if (clearOnEscape && inputValue !== '') {\n            // Avoid Opera to exit fullscreen mode.\n            event.preventDefault(); // Avoid the Modal to handle the event.\n\n            event.stopPropagation();\n            handleClear(event);\n          }\n\n          break;\n\n        case 'Backspace':\n          if (multiple && inputValue === '' && value.length > 0) {\n            var index = focusedTag === -1 ? value.length - 1 : focusedTag;\n\n            var newValue = _toConsumableArray(value);\n\n            newValue.splice(index, 1);\n            handleValue(event, newValue);\n          }\n\n          break;\n\n        default:\n      }\n\n      if (other.onKeyDown) {\n        other.onKeyDown(event);\n      }\n    };\n  };\n\n  var handleFocus = function handleFocus(event) {\n    setFocused(true);\n\n    if (!disableOpenOnFocus && !ignoreFocus.current) {\n      handleOpen(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    setFocused(false);\n    firstFocus.current = true;\n    ignoreFocus.current = false;\n\n    if (debug && inputValue !== '') {\n      return;\n    }\n\n    if (autoSelect && highlightedIndexRef.current !== -1 && popupOpen) {\n      selectNewValue(event, filteredOptions[highlightedIndexRef.current]);\n    } else if (autoSelect && freeSolo && inputValue !== '') {\n      selectNewValue(event, inputValue, 'freeSolo');\n    } else if (!freeSolo) {\n      resetInputValue(event, value);\n    }\n\n    handleClose(event);\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var newValue = event.target.value;\n\n    if (inputValue !== newValue) {\n      setInputValue(newValue);\n\n      if (onInputChange) {\n        onInputChange(event, newValue, 'input');\n      }\n    }\n\n    if (newValue === '') {\n      if (disableOpenOnFocus) {\n        handleClose(event);\n      }\n\n      if (!disableClearable && !multiple) {\n        handleValue(event, null);\n      }\n    } else {\n      handleOpen(event);\n    }\n  };\n\n  var handleOptionMouseOver = function handleOptionMouseOver(event) {\n    var index = Number(event.currentTarget.getAttribute('data-option-index'));\n    setHighlightedIndex(index, 'mouse');\n  };\n\n  var isTouch = React.useRef(false);\n\n  var handleOptionTouchStart = function handleOptionTouchStart() {\n    isTouch.current = true;\n  };\n\n  var handleOptionClick = function handleOptionClick(event) {\n    var index = Number(event.currentTarget.getAttribute('data-option-index'));\n    selectNewValue(event, filteredOptions[index]);\n\n    if (blurOnSelect === true || blurOnSelect === 'touch' && isTouch.current || blurOnSelect === 'mouse' && !isTouch.current) {\n      inputRef.current.blur();\n    }\n\n    isTouch.current = false;\n  };\n\n  var handleTagDelete = function handleTagDelete(index) {\n    return function (event) {\n      var newValue = _toConsumableArray(value);\n\n      newValue.splice(index, 1);\n      handleValue(event, newValue);\n    };\n  };\n\n  var handleListboxRef = useEventCallback(function (node) {\n    setRef(listboxRef, node);\n\n    if (!node) {\n      return;\n    } // Automatically select the first option as the listbox become visible.\n\n\n    if (highlightedIndexRef.current === -1 && autoHighlight) {\n      changeHighlightedIndex('reset', 'next');\n    } else {\n      // Restore the focus to the correct option.\n      setHighlightedIndex(highlightedIndexRef.current);\n    }\n  });\n\n  var handlePopupIndicator = function handlePopupIndicator(event) {\n    if (open) {\n      handleClose(event);\n    } else {\n      handleOpen(event);\n    }\n  }; // Prevent input blur when interacting with the combobox\n\n\n  var handleMouseDown = function handleMouseDown(event) {\n    if (event.target.getAttribute('id') !== id) {\n      event.preventDefault();\n    }\n  }; // Focus the input when interacting with the combobox\n\n\n  var handleClick = function handleClick() {\n    inputRef.current.focus();\n\n    if (selectOnFocus && firstFocus.current && inputRef.current.selectionEnd - inputRef.current.selectionStart === 0) {\n      inputRef.current.select();\n    }\n\n    firstFocus.current = false;\n  };\n\n  var handleInputMouseDown = function handleInputMouseDown(event) {\n    var doc = ownerDocument(inputRef.current);\n\n    if (inputValue === '' && (!disableOpenOnFocus || inputRef.current === doc.activeElement)) {\n      handlePopupIndicator(event);\n    }\n  };\n\n  var dirty = freeSolo && inputValue.length > 0;\n  dirty = dirty || (multiple ? value.length > 0 : value !== null);\n  var groupedOptions = filteredOptions;\n\n  if (groupBy) {\n    var result = []; // used to keep track of key and indexes in the result array\n\n    var indexByKey = new Map();\n    var currentResultIndex = 0;\n    filteredOptions.forEach(function (option) {\n      var key = groupBy(option);\n\n      if (indexByKey.get(key) === undefined) {\n        indexByKey.set(key, currentResultIndex);\n        result.push({\n          key: key,\n          options: []\n        });\n        currentResultIndex += 1;\n      }\n\n      result[indexByKey.get(key)].options.push(option);\n    }); // now we can add the `index` property based on the options length\n\n    var indexCounter = 0;\n    result.forEach(function (option) {\n      option.index = indexCounter;\n      indexCounter += option.options.length;\n    });\n    groupedOptions = result;\n  }\n\n  return {\n    getRootProps: function getRootProps() {\n      var other = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return _extends({\n        'aria-owns': popupOpen ? \"\".concat(id, \"-popup\") : null,\n        role: 'combobox',\n        'aria-expanded': popupOpen\n      }, other, {\n        onKeyDown: handleKeyDown(other),\n        onMouseDown: handleMouseDown,\n        onClick: handleClick\n      });\n    },\n    getInputLabelProps: function getInputLabelProps() {\n      return {\n        id: \"\".concat(id, \"-label\"),\n        htmlFor: id\n      };\n    },\n    getInputProps: function getInputProps() {\n      return {\n        id: id,\n        value: inputValue,\n        onBlur: handleBlur,\n        onFocus: handleFocus,\n        onChange: handleInputChange,\n        onMouseDown: handleInputMouseDown,\n        // if open then this is handled imperativeley so don't let react override\n        // only have an opinion about this when closed\n        'aria-activedescendant': popupOpen ? '' : null,\n        'aria-autocomplete': autoComplete ? 'both' : 'list',\n        'aria-controls': popupOpen ? \"\".concat(id, \"-popup\") : null,\n        // Disable browser's suggestion that might overlap with the popup.\n        // Handle autocomplete but not autofill.\n        autoComplete: 'off',\n        ref: inputRef,\n        autoCapitalize: 'none',\n        spellCheck: 'false'\n      };\n    },\n    getClearProps: function getClearProps() {\n      return {\n        tabIndex: -1,\n        onClick: handleClear\n      };\n    },\n    getPopupIndicatorProps: function getPopupIndicatorProps() {\n      return {\n        tabIndex: -1,\n        onClick: handlePopupIndicator\n      };\n    },\n    getTagProps: function getTagProps(_ref2) {\n      var index = _ref2.index;\n      return {\n        key: index,\n        'data-tag-index': index,\n        tabIndex: -1,\n        onDelete: handleTagDelete(index)\n      };\n    },\n    getListboxProps: function getListboxProps() {\n      return {\n        role: 'listbox',\n        id: \"\".concat(id, \"-popup\"),\n        'aria-labelledby': \"\".concat(id, \"-label\"),\n        ref: handleListboxRef,\n        onMouseDown: function onMouseDown(event) {\n          // Prevent blur\n          event.preventDefault();\n        }\n      };\n    },\n    getOptionProps: function getOptionProps(_ref3) {\n      var index = _ref3.index,\n          option = _ref3.option;\n      var selected = (multiple ? value : [value]).some(function (value2) {\n        return value2 != null && getOptionSelected(option, value2);\n      });\n      var disabled = getOptionDisabled ? getOptionDisabled(option) : false;\n      return {\n        key: index,\n        tabIndex: -1,\n        role: 'option',\n        id: \"\".concat(id, \"-option-\").concat(index),\n        onMouseOver: handleOptionMouseOver,\n        onClick: handleOptionClick,\n        onTouchStart: handleOptionTouchStart,\n        'data-option-index': index,\n        'aria-disabled': disabled,\n        'aria-selected': selected\n      };\n    },\n    id: id,\n    inputValue: inputValue,\n    value: value,\n    dirty: dirty,\n    popupOpen: popupOpen,\n    focused: focused || focusedTag !== -1,\n    anchorEl: anchorEl,\n    setAnchorEl: setAnchorEl,\n    focusedTag: focusedTag,\n    groupedOptions: groupedOptions\n  };\n}\nuseAutocomplete.propTypes = {\n  /**\n   * If `true`, the portion of the selected suggestion that has not been typed by the user,\n   * known as the completion string, appears inline after the input cursor in the textbox.\n   * The inline completion string is visually highlighted and has a selected state.\n   */\n  autoComplete: PropTypes.bool,\n\n  /**\n   * If `true`, the first option is automatically highlighted.\n   */\n  autoHighlight: PropTypes.bool,\n\n  /**\n   * If `true`, the selected option becomes the value of the input\n   * when the Autocomplete loses focus unless the user chooses\n   * a different option or changes the character string in the input.\n   */\n  autoSelect: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, clear all values when the user presses escape and the popup is closed.\n   */\n  clearOnEscape: PropTypes.bool,\n\n  /**\n   * The component name that is using this hook. Used for warnings.\n   */\n  componentName: PropTypes.string,\n\n  /**\n   * If `true`, the popup will ignore the blur event if the input if filled.\n   * You can inspect the popup markup with your browser tools.\n   * Consider this option when you need to customize the component.\n   */\n  debug: PropTypes.bool,\n\n  /**\n   * The default input value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n\n  /**\n   * If `true`, the input can't be cleared.\n   */\n  disableClearable: PropTypes.bool,\n\n  /**\n   * If `true`, the popup won't close when a value is selected.\n   */\n  disableCloseOnSelect: PropTypes.bool,\n\n  /**\n   * If `true`, the list box in the popup will not wrap focus.\n   */\n  disableListWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the popup won't open on input focus.\n   */\n  disableOpenOnFocus: PropTypes.bool,\n\n  /**\n   * A filter function that determins the options that are eligible.\n   *\n   * @param {any} options The options to render.\n   * @param {object} state The state of the component.\n   * @returns {boolean}\n   */\n  filterOptions: PropTypes.func,\n\n  /**\n   * If `true`, hide the selected options from the list box.\n   */\n  filterSelectedOptions: PropTypes.bool,\n\n  /**\n   * If `true`, the Autocomplete is free solo, meaning that the user input is not bound to provided options.\n   */\n  freeSolo: PropTypes.bool,\n\n  /**\n   * Used to determine the disabled state for a given option.\n   */\n  getOptionDisabled: PropTypes.func,\n\n  /**\n   * Used to determine the string value for a given option.\n   * It's used to fill the input (and the list box options if `renderOption` is not provided).\n   */\n  getOptionLabel: PropTypes.func,\n\n  /**\n   * If provided, the options will be grouped under the returned string.\n   * The groupBy value is also used as the text for group headings when `renderGroup` is not provided.\n   *\n   * @param {any} options The option to group.\n   * @returns {string}\n   */\n  groupBy: PropTypes.func,\n\n  /**\n   * This prop is used to help implement the accessibility logic.\n   * If you don't provide this prop. It falls back to a randomly generated id.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the highlight can move to the input.\n   */\n  includeInputInList: PropTypes.bool,\n\n  /**\n   * If `true`, `value` must be an array and the menu will support multiple selections.\n   */\n  multiple: PropTypes.bool,\n\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {object} event The event source of the callback\n   * @param {any} value\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Callback fired when the popup requests to be closed.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired when the text input value changes.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} value The new value of the text input.\n   * @param {string} reason One of \"input\" (user input) or \"reset\" (programmatic change).\n   */\n  onInputChange: PropTypes.func,\n\n  /**\n   * Callback fired when the popup requests to be opened.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onOpen: PropTypes.func,\n\n  /**\n   * Control the popup` open state.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * Array of options.\n   */\n  options: PropTypes.array,\n\n  /**\n   * The input value.\n   */\n  value: PropTypes.any\n};","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { withStyles } from '@material-ui/core/styles';\nimport Popper from '@material-ui/core/Popper';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport Chip from '@material-ui/core/Chip';\nimport CloseIcon from '../internal/svg-icons/Close';\nimport ArrowDropDownIcon from '../internal/svg-icons/ArrowDropDown';\nimport useAutocomplete, { createFilterOptions } from '../useAutocomplete';\nexport { createFilterOptions };\nexport var styles = function styles(theme) {\n  var _option;\n\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      '&:hover $clearIndicatorDirty, &$focused $clearIndicatorDirty': {\n        visibility: 'visible'\n      }\n    },\n\n    /* Pseudo-class applied to the root element if focused. */\n    focused: {},\n\n    /* Styles applied to the tag elements, e.g. the chips. */\n    tag: {\n      margin: 3,\n      maxWidth: 'calc(100% - 6px)'\n    },\n\n    /* Styles applied to the tag elements, e.g. the chips if `size=\"small\"`. */\n    tagSizeSmall: {\n      margin: 2,\n      maxWidth: 'calc(100% - 4px)'\n    },\n\n    /* Styles applied when the popup icon is rendered. */\n    hasPopupIcon: {},\n\n    /* Styles applied when the clear icon is rendered. */\n    hasClearIcon: {},\n\n    /* Styles applied to the Input element. */\n    inputRoot: {\n      flexWrap: 'wrap',\n      '$hasPopupIcon &, $hasClearIcon &': {\n        paddingRight: 26 + 4\n      },\n      '$hasPopupIcon$hasClearIcon &': {\n        paddingRight: 52 + 4\n      },\n      '& $input': {\n        width: 0,\n        minWidth: 30\n      },\n      '&[class*=\"MuiInput-root\"]': {\n        paddingBottom: 1,\n        '& $input': {\n          padding: 4\n        },\n        '& $input:first-child': {\n          padding: '6px 0'\n        }\n      },\n      '&[class*=\"MuiInput-root\"][class*=\"MuiInput-marginDense\"]': {\n        '& $input': {\n          padding: '4px 4px 5px'\n        },\n        '& $input:first-child': {\n          padding: '3px 0 6px'\n        }\n      },\n      '&[class*=\"MuiOutlinedInput-root\"]': {\n        padding: 9,\n        '$hasPopupIcon &, $hasClearIcon &': {\n          paddingRight: 26 + 4 + 9\n        },\n        '$hasPopupIcon$hasClearIcon &': {\n          paddingRight: 52 + 4 + 9\n        },\n        '& $input': {\n          padding: '9.5px 4px'\n        },\n        '& $input:first-child': {\n          paddingLeft: 6\n        },\n        '& $endAdornment': {\n          right: 9\n        }\n      },\n      '&[class*=\"MuiOutlinedInput-root\"][class*=\"MuiOutlinedInput-marginDense\"]': {\n        padding: 6,\n        '& $input': {\n          padding: '4.5px 4px'\n        }\n      },\n      '&[class*=\"MuiFilledInput-root\"]': {\n        paddingTop: 19,\n        paddingLeft: 8,\n        '$hasPopupIcon &, $hasClearIcon &': {\n          paddingRight: 26 + 4 + 9\n        },\n        '$hasPopupIcon$hasClearIcon &': {\n          paddingRight: 52 + 4 + 9\n        },\n        '& $input': {\n          padding: '9px 4px'\n        },\n        '& $endAdornment': {\n          right: 9\n        }\n      },\n      '&[class*=\"MuiFilledInput-root\"][class*=\"MuiFilledInput-marginDense\"]': {\n        paddingBottom: 1,\n        '& $input': {\n          padding: '4.5px 4px'\n        }\n      }\n    },\n\n    /* Styles applied to the input element. */\n    input: {\n      flexGrow: 1,\n      textOverflow: 'ellipsis',\n      opacity: 0\n    },\n\n    /* Styles applied to the input element if tag focused. */\n    inputFocused: {\n      opacity: 1\n    },\n\n    /* Styles applied to the endAdornment element. */\n    endAdornment: {\n      // We use a position absolute to support wrapping tags.\n      position: 'absolute',\n      right: 0,\n      top: 'calc(50% - 14px)' // Center vertically\n\n    },\n\n    /* Styles applied to the clear indicator. */\n    clearIndicator: {\n      marginRight: -2,\n      padding: 4,\n      color: theme.palette.action.active,\n      visibility: 'hidden'\n    },\n\n    /* Styles applied to the clear indicator if the input is dirty. */\n    clearIndicatorDirty: {},\n\n    /* Styles applied to the popup indicator. */\n    popupIndicator: {\n      padding: 2,\n      marginRight: -2,\n      color: theme.palette.action.active\n    },\n\n    /* Styles applied to the popup indicator if the popup is open. */\n    popupIndicatorOpen: {\n      transform: 'rotate(180deg)'\n    },\n\n    /* Styles applied to the popper element. */\n    popper: {\n      zIndex: theme.zIndex.modal\n    },\n\n    /* Styles applied to the popper element if `disablePortal={true}`. */\n    popperDisablePortal: {\n      position: 'absolute'\n    },\n\n    /* Styles applied to the `Paper` component. */\n    paper: _extends({}, theme.typography.body1, {\n      overflow: 'hidden',\n      margin: '4px 0',\n      '& > ul': {\n        maxHeight: '40vh',\n        overflow: 'auto'\n      }\n    }),\n\n    /* Styles applied to the `listbox` component. */\n    listbox: {\n      listStyle: 'none',\n      margin: 0,\n      padding: '8px 0px',\n      position: 'relative'\n    },\n\n    /* Styles applied to the loading wrapper. */\n    loading: {\n      color: theme.palette.text.secondary,\n      padding: '14px 16px'\n    },\n\n    /* Styles applied to the no option wrapper. */\n    noOptions: {\n      color: theme.palette.text.secondary,\n      padding: '14px 16px'\n    },\n\n    /* Styles applied to the option elements. */\n    option: (_option = {\n      minHeight: 48,\n      display: 'flex',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n      cursor: 'pointer',\n      paddingTop: 6,\n      boxSizing: 'border-box',\n      outline: '0',\n      WebkitTapHighlightColor: 'transparent',\n      paddingBottom: 6,\n      paddingLeft: 16,\n      paddingRight: 16\n    }, _defineProperty(_option, theme.breakpoints.up('sm'), {\n      minHeight: 'auto'\n    }), _defineProperty(_option, '&[aria-selected=\"true\"]', {\n      backgroundColor: theme.palette.action.selected\n    }), _defineProperty(_option, '&[data-focus=\"true\"]', {\n      backgroundColor: theme.palette.action.hover\n    }), _defineProperty(_option, '&:active', {\n      backgroundColor: theme.palette.action.selected\n    }), _defineProperty(_option, '&[aria-disabled=\"true\"]', {\n      opacity: theme.palette.action.disabledOpacity,\n      pointerEvents: 'none'\n    }), _option),\n\n    /* Styles applied to the group's label elements. */\n    groupLabel: {\n      backgroundColor: theme.palette.background.paper,\n      top: -8\n    },\n\n    /* Styles applied to the group's ul elements. */\n    groupUl: {\n      padding: 0\n    }\n  };\n};\n\nfunction DisablePortal(props) {\n  // eslint-disable-next-line react/prop-types\n  var anchorEl = props.anchorEl,\n      open = props.open,\n      other = _objectWithoutProperties(props, [\"anchorEl\", \"open\"]);\n\n  return React.createElement(\"div\", other);\n}\n\nvar _ref = React.createElement(CloseIcon, {\n  fontSize: \"small\"\n});\n\nvar _ref2 = React.createElement(ArrowDropDownIcon, null);\n\nvar Autocomplete = React.forwardRef(function Autocomplete(props, ref) {\n  /* eslint-disable no-unused-vars */\n  var _props$autoComplete = props.autoComplete,\n      autoComplete = _props$autoComplete === void 0 ? false : _props$autoComplete,\n      _props$autoHighlight = props.autoHighlight,\n      autoHighlight = _props$autoHighlight === void 0 ? false : _props$autoHighlight,\n      _props$autoSelect = props.autoSelect,\n      autoSelect = _props$autoSelect === void 0 ? false : _props$autoSelect,\n      _props$blurOnSelect = props.blurOnSelect,\n      blurOnSelect = _props$blurOnSelect === void 0 ? false : _props$blurOnSelect,\n      ChipProps = props.ChipProps,\n      classes = props.classes,\n      className = props.className,\n      _props$clearOnEscape = props.clearOnEscape,\n      clearOnEscape = _props$clearOnEscape === void 0 ? false : _props$clearOnEscape,\n      _props$clearText = props.clearText,\n      clearText = _props$clearText === void 0 ? 'Clear' : _props$clearText,\n      _props$closeIcon = props.closeIcon,\n      closeIcon = _props$closeIcon === void 0 ? _ref : _props$closeIcon,\n      _props$closeText = props.closeText,\n      closeText = _props$closeText === void 0 ? 'Close' : _props$closeText,\n      _props$debug = props.debug,\n      debug = _props$debug === void 0 ? false : _props$debug,\n      _props$defaultValue = props.defaultValue,\n      defaultValue = _props$defaultValue === void 0 ? props.multiple ? [] : null : _props$defaultValue,\n      _props$disableClearab = props.disableClearable,\n      disableClearable = _props$disableClearab === void 0 ? false : _props$disableClearab,\n      _props$disableCloseOn = props.disableCloseOnSelect,\n      disableCloseOnSelect = _props$disableCloseOn === void 0 ? false : _props$disableCloseOn,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableListWra = props.disableListWrap,\n      disableListWrap = _props$disableListWra === void 0 ? false : _props$disableListWra,\n      _props$disableOpenOnF = props.disableOpenOnFocus,\n      disableOpenOnFocus = _props$disableOpenOnF === void 0 ? false : _props$disableOpenOnF,\n      _props$disablePortal = props.disablePortal,\n      disablePortal = _props$disablePortal === void 0 ? false : _props$disablePortal,\n      filterOptions = props.filterOptions,\n      _props$filterSelected = props.filterSelectedOptions,\n      filterSelectedOptions = _props$filterSelected === void 0 ? false : _props$filterSelected,\n      _props$forcePopupIcon = props.forcePopupIcon,\n      forcePopupIcon = _props$forcePopupIcon === void 0 ? 'auto' : _props$forcePopupIcon,\n      _props$freeSolo = props.freeSolo,\n      freeSolo = _props$freeSolo === void 0 ? false : _props$freeSolo,\n      getOptionDisabled = props.getOptionDisabled,\n      _props$getOptionLabel = props.getOptionLabel,\n      getOptionLabel = _props$getOptionLabel === void 0 ? function (x) {\n    return x;\n  } : _props$getOptionLabel,\n      getOptionSelected = props.getOptionSelected,\n      groupBy = props.groupBy,\n      idProp = props.id,\n      _props$includeInputIn = props.includeInputInList,\n      includeInputInList = _props$includeInputIn === void 0 ? false : _props$includeInputIn,\n      inputValueProp = props.inputValue,\n      _props$ListboxCompone = props.ListboxComponent,\n      ListboxComponent = _props$ListboxCompone === void 0 ? 'ul' : _props$ListboxCompone,\n      ListboxProps = props.ListboxProps,\n      _props$loading = props.loading,\n      loading = _props$loading === void 0 ? false : _props$loading,\n      _props$loadingText = props.loadingText,\n      loadingText = _props$loadingText === void 0 ? 'Loading…' : _props$loadingText,\n      _props$multiple = props.multiple,\n      multiple = _props$multiple === void 0 ? false : _props$multiple,\n      _props$noOptionsText = props.noOptionsText,\n      noOptionsText = _props$noOptionsText === void 0 ? 'No options' : _props$noOptionsText,\n      onChange = props.onChange,\n      onClose = props.onClose,\n      onInputChange = props.onInputChange,\n      onOpen = props.onOpen,\n      open = props.open,\n      _props$openText = props.openText,\n      openText = _props$openText === void 0 ? 'Open' : _props$openText,\n      options = props.options,\n      _props$PaperComponent = props.PaperComponent,\n      PaperComponent = _props$PaperComponent === void 0 ? Paper : _props$PaperComponent,\n      _props$PopperComponen = props.PopperComponent,\n      PopperComponentProp = _props$PopperComponen === void 0 ? Popper : _props$PopperComponen,\n      _props$popupIcon = props.popupIcon,\n      popupIcon = _props$popupIcon === void 0 ? _ref2 : _props$popupIcon,\n      renderGroupProp = props.renderGroup,\n      renderInput = props.renderInput,\n      renderOptionProp = props.renderOption,\n      renderTags = props.renderTags,\n      _props$selectOnFocus = props.selectOnFocus,\n      selectOnFocus = _props$selectOnFocus === void 0 ? !props.freeSolo : _props$selectOnFocus,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      valueProp = props.value,\n      other = _objectWithoutProperties(props, [\"autoComplete\", \"autoHighlight\", \"autoSelect\", \"blurOnSelect\", \"ChipProps\", \"classes\", \"className\", \"clearOnEscape\", \"clearText\", \"closeIcon\", \"closeText\", \"debug\", \"defaultValue\", \"disableClearable\", \"disableCloseOnSelect\", \"disabled\", \"disableListWrap\", \"disableOpenOnFocus\", \"disablePortal\", \"filterOptions\", \"filterSelectedOptions\", \"forcePopupIcon\", \"freeSolo\", \"getOptionDisabled\", \"getOptionLabel\", \"getOptionSelected\", \"groupBy\", \"id\", \"includeInputInList\", \"inputValue\", \"ListboxComponent\", \"ListboxProps\", \"loading\", \"loadingText\", \"multiple\", \"noOptionsText\", \"onChange\", \"onClose\", \"onInputChange\", \"onOpen\", \"open\", \"openText\", \"options\", \"PaperComponent\", \"PopperComponent\", \"popupIcon\", \"renderGroup\", \"renderInput\", \"renderOption\", \"renderTags\", \"selectOnFocus\", \"size\", \"value\"]);\n  /* eslint-enable no-unused-vars */\n\n\n  var PopperComponent = disablePortal ? DisablePortal : PopperComponentProp;\n\n  var _useAutocomplete = useAutocomplete(_extends({}, props, {\n    componentName: 'Autocomplete'\n  })),\n      getRootProps = _useAutocomplete.getRootProps,\n      getInputProps = _useAutocomplete.getInputProps,\n      getInputLabelProps = _useAutocomplete.getInputLabelProps,\n      getPopupIndicatorProps = _useAutocomplete.getPopupIndicatorProps,\n      getClearProps = _useAutocomplete.getClearProps,\n      getTagProps = _useAutocomplete.getTagProps,\n      getListboxProps = _useAutocomplete.getListboxProps,\n      getOptionProps = _useAutocomplete.getOptionProps,\n      value = _useAutocomplete.value,\n      dirty = _useAutocomplete.dirty,\n      id = _useAutocomplete.id,\n      popupOpen = _useAutocomplete.popupOpen,\n      focused = _useAutocomplete.focused,\n      focusedTag = _useAutocomplete.focusedTag,\n      anchorEl = _useAutocomplete.anchorEl,\n      setAnchorEl = _useAutocomplete.setAnchorEl,\n      inputValue = _useAutocomplete.inputValue,\n      groupedOptions = _useAutocomplete.groupedOptions;\n\n  var startAdornment;\n\n  if (multiple && value.length > 0) {\n    var getCustomizedTagProps = function getCustomizedTagProps(params) {\n      return _extends({\n        className: clsx(classes.tag, size === 'small' && classes.tagSizeSmall),\n        disabled: disabled\n      }, getTagProps(params));\n    };\n\n    if (renderTags) {\n      startAdornment = renderTags(value, getCustomizedTagProps);\n    } else {\n      startAdornment = value.map(function (option, index) {\n        return React.createElement(Chip, _extends({\n          label: getOptionLabel(option),\n          size: size\n        }, getCustomizedTagProps({\n          index: index\n        }), ChipProps));\n      });\n    }\n  }\n\n  var defaultRenderGroup = function defaultRenderGroup(params) {\n    return React.createElement(\"li\", {\n      key: params.key\n    }, React.createElement(ListSubheader, {\n      className: classes.groupLabel,\n      component: \"div\"\n    }, params.key), React.createElement(\"ul\", {\n      className: classes.groupUl\n    }, params.children));\n  };\n\n  var renderGroup = renderGroupProp || defaultRenderGroup;\n  var renderOption = renderOptionProp || getOptionLabel;\n\n  var renderListOption = function renderListOption(option, index) {\n    var optionProps = getOptionProps({\n      option: option,\n      index: index\n    });\n    return React.createElement(\"li\", _extends({}, optionProps, {\n      className: classes.option\n    }), renderOption(option, {\n      selected: optionProps['aria-selected'],\n      inputValue: inputValue\n    }));\n  };\n\n  var hasClearIcon = !disableClearable && !disabled;\n  var hasPopupIcon = (!freeSolo || forcePopupIcon === true) && forcePopupIcon !== false;\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", _extends({\n    ref: ref,\n    className: clsx(classes.root, className, focused && classes.focused, hasClearIcon && classes.hasClearIcon, hasPopupIcon && classes.hasPopupIcon)\n  }, getRootProps(other)), renderInput({\n    id: id,\n    disabled: disabled,\n    fullWidth: true,\n    size: size === 'small' ? 'small' : undefined,\n    InputLabelProps: getInputLabelProps(),\n    InputProps: {\n      ref: setAnchorEl,\n      className: classes.inputRoot,\n      startAdornment: startAdornment,\n      endAdornment: React.createElement(\"div\", {\n        className: classes.endAdornment\n      }, hasClearIcon ? React.createElement(IconButton, _extends({}, getClearProps(), {\n        \"aria-label\": clearText,\n        title: clearText,\n        className: clsx(classes.clearIndicator, dirty && classes.clearIndicatorDirty)\n      }), closeIcon) : null, hasPopupIcon ? React.createElement(IconButton, _extends({}, getPopupIndicatorProps(), {\n        disabled: disabled,\n        \"aria-label\": popupOpen ? closeText : openText,\n        title: popupOpen ? closeText : openText,\n        className: clsx(classes.popupIndicator, popupOpen && classes.popupIndicatorOpen)\n      }), popupIcon) : null)\n    },\n    inputProps: _extends({\n      className: clsx(classes.input, focusedTag === -1 && classes.inputFocused),\n      disabled: disabled\n    }, getInputProps())\n  })), popupOpen && anchorEl ? React.createElement(PopperComponent, {\n    className: clsx(classes.popper, disablePortal && classes.popperDisablePortal),\n    style: {\n      width: anchorEl ? anchorEl.clientWidth : null\n    },\n    role: \"presentation\",\n    anchorEl: anchorEl,\n    open: true\n  }, React.createElement(PaperComponent, {\n    className: classes.paper\n  }, loading && groupedOptions.length === 0 ? React.createElement(\"div\", {\n    className: classes.loading\n  }, loadingText) : null, groupedOptions.length === 0 && !freeSolo && !loading ? React.createElement(\"div\", {\n    className: classes.noOptions\n  }, noOptionsText) : null, groupedOptions.length > 0 ? React.createElement(ListboxComponent, _extends({\n    className: classes.listbox\n  }, getListboxProps(), ListboxProps), groupedOptions.map(function (option, index) {\n    if (groupBy) {\n      return renderGroup({\n        key: option.key,\n        children: option.options.map(function (option2, index2) {\n          return renderListOption(option2, option.index + index2);\n        })\n      });\n    }\n\n    return renderListOption(option, index);\n  })) : null)) : null);\n});\nprocess.env.NODE_ENV !== \"production\" ? Autocomplete.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the portion of the selected suggestion that has not been typed by the user,\n   * known as the completion string, appears inline after the input cursor in the textbox.\n   * The inline completion string is visually highlighted and has a selected state.\n   */\n  autoComplete: PropTypes.bool,\n\n  /**\n   * If `true`, the first option is automatically highlighted.\n   */\n  autoHighlight: PropTypes.bool,\n\n  /**\n   * If `true`, the selected option becomes the value of the input\n   * when the Autocomplete loses focus unless the user chooses\n   * a different option or changes the character string in the input.\n   */\n  autoSelect: PropTypes.bool,\n\n  /**\n   * Control if the input should be blurred when an option is selected:\n   *\n   * - `false` the input is not blurred.\n   * - `true` the input is always blurred.\n   * - `touch` the input is blurred after a touch event.\n   * - `mouse` the input is blurred after a mouse event.\n   */\n  blurOnSelect: PropTypes.oneOfType([PropTypes.oneOf(['mouse', 'touch']), PropTypes.bool]),\n\n  /**\n   * Props applied to the [`Chip`](/api/chip/) element.\n   */\n  ChipProps: PropTypes.object,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, clear all values when the user presses escape and the popup is closed.\n   */\n  clearOnEscape: PropTypes.bool,\n\n  /**\n   * Override the default text for the *clear* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  clearText: PropTypes.string,\n\n  /**\n   * The icon to display in place of the default close icon.\n   */\n  closeIcon: PropTypes.node,\n\n  /**\n   * Override the default text for the *close popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  closeText: PropTypes.string,\n\n  /**\n   * If `true`, the popup will ignore the blur event if the input if filled.\n   * You can inspect the popup markup with your browser tools.\n   * Consider this option when you need to customize the component.\n   */\n  debug: PropTypes.bool,\n\n  /**\n   * The default input value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.oneOfType([PropTypes.any, PropTypes.array]),\n\n  /**\n   * If `true`, the input can't be cleared.\n   */\n  disableClearable: PropTypes.bool,\n\n  /**\n   * If `true`, the popup won't close when a value is selected.\n   */\n  disableCloseOnSelect: PropTypes.bool,\n\n  /**\n   * If `true`, the input will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the list box in the popup will not wrap focus.\n   */\n  disableListWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the popup won't open on input focus.\n   */\n  disableOpenOnFocus: PropTypes.bool,\n\n  /**\n   * Disable the portal behavior.\n   * The children stay within it's parent DOM hierarchy.\n   */\n  disablePortal: PropTypes.bool,\n\n  /**\n   * A filter function that determines the options that are eligible.\n   *\n   * @param {T[]} options The options to render.\n   * @param {object} state The state of the component.\n   * @returns {T[]}\n   */\n  filterOptions: PropTypes.func,\n\n  /**\n   * If `true`, hide the selected options from the list box.\n   */\n  filterSelectedOptions: PropTypes.bool,\n\n  /**\n   * Force the visibility display of the popup icon.\n   */\n  forcePopupIcon: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.bool]),\n\n  /**\n   * If `true`, the Autocomplete is free solo, meaning that the user input is not bound to provided options.\n   */\n  freeSolo: PropTypes.bool,\n\n  /**\n   * Used to determine the disabled state for a given option.\n   */\n  getOptionDisabled: PropTypes.func,\n\n  /**\n   * Used to determine the string value for a given option.\n   * It's used to fill the input (and the list box options if `renderOption` is not provided).\n   */\n  getOptionLabel: PropTypes.func,\n\n  /**\n   * Used to determine if an option is selected.\n   * Uses strict equality by default.\n   */\n  getOptionSelected: PropTypes.func,\n\n  /**\n   * If provided, the options will be grouped under the returned string.\n   * The groupBy value is also used as the text for group headings when `renderGroup` is not provided.\n   *\n   * @param {T} options The option to group.\n   * @returns {string}\n   */\n  groupBy: PropTypes.func,\n\n  /**\n   * This prop is used to help implement the accessibility logic.\n   * If you don't provide this prop. It falls back to a randomly generated id.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the highlight can move to the input.\n   */\n  includeInputInList: PropTypes.bool,\n\n  /**\n   * The input value.\n   */\n  inputValue: PropTypes.string,\n\n  /**\n   * The component used to render the listbox.\n   */\n  ListboxComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the Listbox element.\n   */\n  ListboxProps: PropTypes.object,\n\n  /**\n   * If `true`, the component is in a loading state.\n   */\n  loading: PropTypes.bool,\n\n  /**\n   * Text to display when in a loading state.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  loadingText: PropTypes.node,\n\n  /**\n   * If `true`, `value` must be an array and the menu will support multiple selections.\n   */\n  multiple: PropTypes.bool,\n\n  /**\n   * Text to display when there are no options.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  noOptionsText: PropTypes.node,\n\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {T} value\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Callback fired when the popup requests to be closed.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired when the input value changes.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} value The new value of the text input.\n   * @param {string} reason Can be: `\"input\"` (user input), `\"reset\"` (programmatic change), `\"clear\"`.\n   */\n  onInputChange: PropTypes.func,\n\n  /**\n   * Callback fired when the popup requests to be opened.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onOpen: PropTypes.func,\n\n  /**\n   * Control the popup` open state.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * Override the default text for the *open popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  openText: PropTypes.string,\n\n  /**\n   * Array of options.\n   */\n  options: PropTypes.array.isRequired,\n\n  /**\n   * The component used to render the body of the popup.\n   */\n  PaperComponent: PropTypes.elementType,\n\n  /**\n   * The component used to position the popup.\n   */\n  PopperComponent: PropTypes.elementType,\n\n  /**\n   * The icon to display in place of the default popup icon.\n   */\n  popupIcon: PropTypes.node,\n\n  /**\n   * Render the group.\n   *\n   * @param {any} option The group to render.\n   * @returns {ReactNode}\n   */\n  renderGroup: PropTypes.func,\n\n  /**\n   * Render the input.\n   *\n   * @param {object} params\n   * @returns {ReactNode}\n   */\n  renderInput: PropTypes.func.isRequired,\n\n  /**\n   * Render the option, use `getOptionLabel` by default.\n   *\n   * @param {T} option The option to render.\n   * @param {object} state The state of the component.\n   * @returns {ReactNode}\n   */\n  renderOption: PropTypes.func,\n\n  /**\n   * Render the selected value.\n   *\n   * @param {T[]} value The `value` provided to the component.\n   * @param {function} getTagProps A tag props getter.\n   * @returns {ReactNode}\n   */\n  renderTags: PropTypes.func,\n\n  /**\n   * If `true`, the input's text will be selected on focus.\n   * It helps the user clear the selected value.\n   */\n  selectOnFocus: PropTypes.bool,\n\n  /**\n   * The size of the autocomplete.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the autocomplete.\n   *\n   * The value must have reference equality with the option in order to be selected.\n   * You can customize the equality behavior with the `getOptionSelected` prop.\n   */\n  value: PropTypes.oneOfType([PropTypes.any, PropTypes.array])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAutocomplete'\n})(Autocomplete);","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\"\n}), 'Info');","/* eslint-disable max-classes-per-file */\r\n/* eslint-disable react/no-unused-state */\r\nimport React, { lazy, Suspense } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { ViewState, EditingState } from \"@devexpress/dx-react-scheduler\";\r\n\r\nimport {\r\n  Scheduler,\r\n  Toolbar,\r\n  MonthView,\r\n  WeekView,\r\n  ViewSwitcher,\r\n  Appointments,\r\n  AppointmentTooltip,\r\n  AppointmentForm,\r\n  DragDropProvider,\r\n  EditRecurrenceMenu,\r\n  AllDayPanel,\r\n  TodayButton,\r\n  DateNavigator\r\n} from \"@devexpress/dx-react-scheduler-material-ui\";\r\nimport { connectProps } from \"@devexpress/dx-react-core\";\r\nimport {\r\n  KeyboardDateTimePicker,\r\n  MuiPickersUtilsProvider\r\n} from \"@material-ui/pickers\";\r\nimport MomentUtils from \"@date-io/moment\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Notes from \"@material-ui/icons/Notes\";\r\nimport Close from \"@material-ui/icons/Close\";\r\nimport CalendarToday from \"@material-ui/icons/CalendarToday\";\r\nimport Create from \"@material-ui/icons/Create\";\r\nimport { ConfirmationDialog } from \"@devexpress/dx-react-scheduler-material-ui\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  createWorkout,\r\n  deleteWorkout,\r\n  updateWorkout\r\n} from \"../actions/workoutActions\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { CircularProgress, LinearProgress } from \"@material-ui/core\";\r\nimport { Info } from \"@material-ui/icons\";\r\nconst ErrorAlert = lazy(() => import(\"./ErrorAlert\"));\r\nconst Modal = lazy(() =>\r\n  import(/* webpackChunkName: \"Modal\"*/ \"../layouts/Modal\")\r\n);\r\n\r\nconst containerStyles = theme => ({\r\n  container: {\r\n    width: theme.spacing(68),\r\n    padding: 0,\r\n    paddingBottom: theme.spacing(2)\r\n  },\r\n  content: {\r\n    padding: theme.spacing(2),\r\n    paddingTop: 0\r\n  },\r\n  header: {\r\n    overflow: \"hidden\",\r\n    paddingTop: theme.spacing(0.5)\r\n  },\r\n  closeButton: {\r\n    float: \"right\"\r\n  },\r\n  buttonGroup: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n    padding: theme.spacing(0, 2)\r\n  },\r\n  button: {\r\n    marginLeft: theme.spacing(2)\r\n  },\r\n  picker: {\r\n    marginRight: theme.spacing(2),\r\n    \"&:last-child\": {\r\n      marginRight: 0\r\n    },\r\n    width: \"50%\"\r\n  },\r\n  wrapper: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    padding: theme.spacing(1, 0)\r\n  },\r\n  icon: {\r\n    margin: theme.spacing(2, 0),\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  textField: {\r\n    width: \"100%\"\r\n  }\r\n});\r\n\r\nclass AppointmentFormContainerBasic extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      appointmentChanges: {}\r\n    };\r\n\r\n    this.getAppointmentData = () => {\r\n      const { appointmentData } = this.props;\r\n      return appointmentData;\r\n    };\r\n    this.getAppointmentChanges = () => {\r\n      const { appointmentChanges } = this.state;\r\n      return appointmentChanges;\r\n    };\r\n\r\n    this.changeAppointment = this.changeAppointment.bind(this);\r\n    this.commitAppointment = this.commitAppointment.bind(this);\r\n  }\r\n\r\n  changeAppointment({ field, changes }) {\r\n    const nextChanges = {\r\n      ...this.getAppointmentChanges(),\r\n      [field]: changes\r\n    };\r\n    this.setState({\r\n      appointmentChanges: nextChanges\r\n    });\r\n  }\r\n\r\n  commitAppointment(type) {\r\n    const { commitChanges } = this.props;\r\n    const appointment = {\r\n      ...this.getAppointmentData(),\r\n      ...this.getAppointmentChanges()\r\n    };\r\n    if (type === \"deleted\") {\r\n      commitChanges({ [type]: appointment.id });\r\n    } else if (type === \"changed\") {\r\n      commitChanges({ [type]: { [appointment.id]: appointment } });\r\n    } else {\r\n      commitChanges({ [type]: appointment });\r\n    }\r\n    this.setState({\r\n      appointmentChanges: {}\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      classes,\r\n      visible,\r\n      visibleChange,\r\n      appointmentData,\r\n      cancelAppointment,\r\n      target,\r\n      onHide,\r\n      activeClients,\r\n      data\r\n    } = this.props;\r\n\r\n    const { appointmentChanges } = this.state;\r\n\r\n    const displayAppointmentData = {\r\n      ...appointmentData,\r\n      ...appointmentChanges\r\n    };\r\n\r\n    const clientsOptions = activeClients.map(client => {\r\n      return {\r\n        id: client._id,\r\n        text: client.firstName + \" \" + client.lastName\r\n      };\r\n    });\r\n\r\n    const isNewAppointment = appointmentData.id === undefined;\r\n    const applyChanges = isNewAppointment\r\n      ? () => this.commitAppointment(\"added\")\r\n      : () => this.commitAppointment(\"changed\");\r\n\r\n    const textEditorProps = field => ({\r\n      variant: \"outlined\",\r\n      onChange: ({ target: change }) =>\r\n        this.changeAppointment({\r\n          field: [field],\r\n          changes: change.value\r\n        }),\r\n      value: displayAppointmentData[field] || \"\",\r\n      label: field[0].toUpperCase() + field.slice(1),\r\n      className: classes.textField\r\n    });\r\n\r\n    const clientEditorProps = field => ({\r\n      variant: \"outlined\",\r\n      value: displayAppointmentData.client,\r\n      label: displayAppointmentData.client,\r\n      className: classes.textField\r\n    });\r\n\r\n    const pickerEditorProps = field => ({\r\n      className: classes.picker,\r\n      // keyboard: true,\r\n      ampm: false,\r\n      value: displayAppointmentData[field],\r\n      onChange: date =>\r\n        this.changeAppointment({\r\n          field: [field],\r\n          changes: date\r\n            ? date.toDate()\r\n            : new Date(displayAppointmentData[field])\r\n        }),\r\n      inputVariant: \"outlined\",\r\n      format: \"DD/MM/YYYY HH:mm\",\r\n      onError: () => null\r\n    });\r\n\r\n    const cancelChanges = () => {\r\n      this.setState({\r\n        appointmentChanges: {}\r\n      });\r\n      visibleChange();\r\n      cancelAppointment();\r\n    };\r\n\r\n    return (\r\n      <AppointmentForm.Overlay\r\n        visible={visible}\r\n        target={target}\r\n        onHide={onHide}\r\n      >\r\n        <div>\r\n          <div className={classes.header}>\r\n            <IconButton className={classes.closeButton} onClick={cancelChanges}>\r\n              <Close color=\"action\" />\r\n            </IconButton>\r\n          </div>\r\n          <div className={classes.content}>\r\n            <div className={classes.wrapper}>\r\n              <Create className={classes.icon} color=\"action\" />\r\n              <Autocomplete\r\n                options={clientsOptions}\r\n                placeholder=\"\"\r\n                getOptionLabel={option => option.text}\r\n                {...clientEditorProps(\"title\")}\r\n                renderInput={params => (\r\n                  <TextField\r\n                    {...params}\r\n                    label={\r\n                      displayAppointmentData.title\r\n                        ? displayAppointmentData.title\r\n                        : \"\"\r\n                    }\r\n                    variant=\"outlined\"\r\n                    placeholder=\"client\"\r\n                  />\r\n                )}\r\n                onChange={(event, newValue) => {\r\n                  const change = {\r\n                    field: \"title\",\r\n                    changes: newValue ? newValue.id : \"\"\r\n                  };\r\n                  this.changeAppointment(change);\r\n                }}\r\n                clearOnEscape\r\n              />\r\n            </div>\r\n            <div className={classes.wrapper}>\r\n              <CalendarToday className={classes.icon} color=\"action\" />\r\n              <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                <KeyboardDateTimePicker\r\n                  label=\"Start Date\"\r\n                  {...pickerEditorProps(\"startDate\")}\r\n                />\r\n                <KeyboardDateTimePicker\r\n                  label=\"End Date\"\r\n                  {...pickerEditorProps(\"endDate\")}\r\n                />\r\n              </MuiPickersUtilsProvider>\r\n            </div>\r\n            <div className={classes.wrapper}>\r\n              <Notes className={classes.icon} color=\"action\" />\r\n              <TextField {...textEditorProps(\"notes\")} multiline rows=\"6\" />\r\n            </div>\r\n          </div>\r\n          <div className={classes.buttonGroup}>\r\n            {!isNewAppointment && (\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"secondary\"\r\n                className={classes.button}\r\n                onClick={() => {\r\n                  visibleChange();\r\n                  this.commitAppointment(\"deleted\");\r\n                }}\r\n              >\r\n                Delete\r\n              </Button>\r\n            )}\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              onClick={() => {\r\n                visibleChange();\r\n                applyChanges();\r\n              }}\r\n            >\r\n              {isNewAppointment ? \"Create\" : \"Save\"}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </AppointmentForm.Overlay>\r\n    );\r\n  }\r\n}\r\n\r\nconst AppointmentFormContainer = withStyles(containerStyles, {\r\n  name: \"AppointmentFormContainer\"\r\n})(AppointmentFormContainerBasic);\r\n\r\nconst styles = theme => ({\r\n  addButton: {\r\n    position: \"absolute\",\r\n    bottom: theme.spacing(1) * 3,\r\n    right: theme.spacing(1) * 4,\r\n  }\r\n});\r\n\r\n/* eslint-disable-next-line react/no-multi-comp */\r\nclass Schedule2 extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: this.props.workouts,\r\n      activeClients: this.props.activeClients,\r\n      currentDate: new Date(),\r\n      confirmationVisible: false,\r\n      editingFormVisible: false,\r\n      deletedAppointmentId: undefined,\r\n      editingAppointment: undefined,\r\n      previousAppointment: undefined,\r\n      addedAppointment: {},\r\n      startDayHour: 8,\r\n      endDayHour: 22,\r\n      isNewAppointment: false,\r\n      open: false,\r\n      modalBody: \"\",\r\n      alerts: this.props.alerts\r\n    };\r\n\r\n    this.toggleConfirmationVisible = this.toggleConfirmationVisible.bind(this);\r\n    this.commitDeletedAppointment = this.commitDeletedAppointment.bind(this);\r\n    this.toggleEditingFormVisibility = this.toggleEditingFormVisibility.bind(\r\n      this\r\n    );\r\n\r\n    this.commitChanges = this.commitChanges.bind(this);\r\n    this.onEditingAppointmentChange = this.onEditingAppointmentChange.bind(\r\n      this\r\n    );\r\n    this.onAddedAppointmentChange = this.onAddedAppointmentChange.bind(this);\r\n    this.appointmentForm = connectProps(AppointmentFormContainer, () => {\r\n      const {\r\n        editingFormVisible,\r\n        editingAppointment,\r\n        data,\r\n        activeClients,\r\n        addedAppointment,\r\n        isNewAppointment,\r\n        previousAppointment\r\n      } = this.state;\r\n\r\n      const currentAppointment =\r\n        this.props.workouts.filter(\r\n          appointment =>\r\n            editingAppointment && appointment.id === editingAppointment.id\r\n        )[0] || addedAppointment;\r\n      const cancelAppointment = () => {\r\n        if (isNewAppointment) {\r\n          this.setState({\r\n            editingAppointment: previousAppointment,\r\n            isNewAppointment: false\r\n          });\r\n        }\r\n      };\r\n\r\n      return {\r\n        visible: editingFormVisible,\r\n        appointmentData: currentAppointment,\r\n        activeClients: activeClients,\r\n        data: data,\r\n        commitChanges: this.commitChanges,\r\n        visibleChange: this.toggleEditingFormVisibility,\r\n        onEditingAppointmentChange: this.onEditingAppointmentChange,\r\n        cancelAppointment\r\n      };\r\n    });\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.appointmentForm.update();\r\n  }\r\n\r\n  onEditingAppointmentChange(editingAppointment) {\r\n    this.setState({ editingAppointment });\r\n  }\r\n\r\n  onAddedAppointmentChange(addedAppointment) {\r\n    this.setState({ addedAppointment });\r\n    const { editingAppointment } = this.state;\r\n    if (editingAppointment !== undefined) {\r\n      this.setState({\r\n        previousAppointment: editingAppointment\r\n      });\r\n    }\r\n    this.setState({ editingAppointment: undefined, isNewAppointment: true });\r\n  }\r\n\r\n  setDeletedAppointmentId(id) {\r\n    this.setState({ deletedAppointmentId: id });\r\n  }\r\n\r\n  toggleEditingFormVisibility() {\r\n    const { editingFormVisible } = this.state;\r\n    this.setState({\r\n      editingFormVisible: !editingFormVisible\r\n    });\r\n  }\r\n\r\n  toggleConfirmationVisible() {\r\n    const { confirmationVisible } = this.state;\r\n    this.setState({ confirmationVisible: !confirmationVisible });\r\n  }\r\n\r\n  commitDeletedAppointment() {\r\n    this.setState(state => {\r\n      const { data, deletedAppointmentId } = state;\r\n      const nextData = data.filter(\r\n        appointment => appointment.id !== deletedAppointmentId\r\n      );\r\n\r\n      return { data: nextData, deletedAppointmentId: null };\r\n    });\r\n    this.toggleConfirmationVisible();\r\n  }\r\n\r\n  commitChanges({ added, changed, deleted }) {\r\n    this.setState(state => {\r\n      let { data } = state;\r\n      if (added) {\r\n        return this.props.createWorkout(added);\r\n      }\r\n\r\n      if (changed) {\r\n        const id = Object.keys(changed)[0];\r\n        const update = Object.values(changed)[0];\r\n\r\n        if (!(\"title\" in update)) {\r\n          update.id = id;\r\n        } else {\r\n          if (update[\"title\"].indexOf(\" \") >= 0) {\r\n            delete update[\"title\"];\r\n          } else {\r\n            update[\"client\"] = update[\"title\"];\r\n            delete update[\"title\"];\r\n          }\r\n        }\r\n        console.log(update);\r\n\r\n        this.props.updateWorkout(update);\r\n      }\r\n      if (deleted !== undefined) {\r\n        this.props.deleteWorkout(deleted);\r\n      }\r\n      return { data, addedAppointment: {} };\r\n    });\r\n  }\r\n\r\n  modalOpen(workoutData) {\r\n    this.setState({ ...this.state, open: true, modalBody: workoutData });\r\n  }\r\n\r\n  modalClose = () => {\r\n    this.setState({ ...this.state, open: false });\r\n  };\r\n\r\n  currentDateChange = currentDate => {\r\n    this.setState({ ...this.state, currentDate: currentDate });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      currentDate,\r\n      editingFormVisible,\r\n      startDayHour,\r\n      endDayHour,\r\n      open,\r\n      modalBody\r\n    } = this.state;\r\n    const { classes } = this.props;\r\n\r\n    const toolBarStyle = {\r\n      toolbarRoot: {\r\n        position: \"relative\"\r\n      },\r\n      progress: {\r\n        position: \"absolute\",\r\n        width: \"100%\",\r\n        bottom: 0,\r\n        left: 0\r\n      }\r\n    };\r\n    const ToolbarWithLoading = withStyles(toolBarStyle, { name: \"Toolbar\" })(\r\n      ({ children, classes, ...restProps }) => (\r\n        <div className={classes.toolbarRoot}>\r\n          <Toolbar.Root {...restProps}>{children}</Toolbar.Root>\r\n          <LinearProgress className={classes.progress} />\r\n        </div>\r\n      )\r\n    );\r\n\r\n    const Header = withStyles(\r\n      {},\r\n      { name: \"Header\" }\r\n    )(({ children, appointmentData, classes, ...restProps }) => (\r\n      <AppointmentTooltip.Header\r\n        {...restProps}\r\n        appointmentData={appointmentData}\r\n      >\r\n        <IconButton\r\n          onClick={() => this.modalOpen(appointmentData.notes)}\r\n          className={classes.commandButton}\r\n        >\r\n          <Info />\r\n        </IconButton>\r\n      </AppointmentTooltip.Header>\r\n    ));\r\n\r\n    return (\r\n      <Paper>\r\n        {this.props.alerts ? (\r\n          <Suspense fallback={<CircularProgress />}>\r\n            {this.props.alerts.map(alert => {\r\n              return alert.msg.map(err => {\r\n                return <ErrorAlert message={err} />;\r\n              });\r\n            })}\r\n          </Suspense>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        <Scheduler data={this.props.workouts} height={\"100%\"}>\r\n          <ViewState\r\n            currentDate={currentDate}\r\n            onCurrentDateChange={this.currentDateChange}\r\n          />\r\n          <EditingState\r\n            onCommitChanges={this.commitChanges}\r\n            onEditingAppointmentChange={this.onEditingAppointmentChange}\r\n            onAddedAppointmentChange={this.onAddedAppointmentChange}\r\n          />\r\n          <WeekView\r\n            startDayHour={startDayHour}\r\n            endDayHour={endDayHour}\r\n            cellDuration={60}\r\n          />\r\n          <MonthView />\r\n          <AllDayPanel />\r\n          <EditRecurrenceMenu />\r\n          <ConfirmationDialog />\r\n          <Appointments />\r\n          <AppointmentTooltip\r\n            showOpenButton\r\n            showCloseButton\r\n            showDeleteButton\r\n            headerComponent={Header}\r\n          />\r\n          <Toolbar\r\n            {...(this.props.loading\r\n              ? { rootComponent: ToolbarWithLoading }\r\n              : null)}\r\n          />\r\n          <DateNavigator />\r\n          <TodayButton />\r\n          <ViewSwitcher />\r\n          <AppointmentForm\r\n            overlayComponent={this.appointmentForm}\r\n            visible={editingFormVisible}\r\n            onVisibilityChange={this.toggleEditingFormVisibility}\r\n          />\r\n          <DragDropProvider />\r\n        </Scheduler>\r\n\r\n        <Fab\r\n          color=\"secondary\"\r\n          className={classes.addButton}\r\n          onClick={() => {\r\n            this.setState({ editingFormVisible: true });\r\n            this.onEditingAppointmentChange(undefined);\r\n            this.onAddedAppointmentChange({\r\n              startDate: new Date(currentDate).setHours(startDayHour),\r\n              endDate: new Date(currentDate).setHours(startDayHour + 1)\r\n            });\r\n          }}\r\n        >\r\n          <AddIcon />\r\n        </Fab>\r\n\r\n        <Suspense fallback={<CircularProgress />}>\r\n          <Modal\r\n            open={open}\r\n            handleClose={this.modalClose}\r\n            modalBody={modalBody}\r\n            modalTitle={\"Workout Info:\"}\r\n          />\r\n        </Suspense>\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n\r\nSchedule2.propTypes = {\r\n  createWorkout: PropTypes.func.isRequired,\r\n  deleteWorkout: PropTypes.func.isRequired,\r\n  updateWorkout: PropTypes.func.isRequired,\r\n  workouts: PropTypes.array.isRequired,\r\n  clients: PropTypes.array.isRequired,\r\n  activeClients: PropTypes.array.isRequired,\r\n  loading: PropTypes.bool.isRequired,\r\n  alerts: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  workouts: state.workouts.workouts,\r\n  clients: state.clients.clients,\r\n  activeClients: state.clients.active,\r\n  loading: state.workouts.loading,\r\n  alerts: state.alerts.alerts\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  createWorkout,\r\n  deleteWorkout,\r\n  updateWorkout\r\n})(withStyles(styles, { name: \"Schedule2\" })(Schedule2));\r\n"],"sourceRoot":""}