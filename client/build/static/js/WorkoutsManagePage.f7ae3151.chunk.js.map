{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/workoutsTable.js","layouts/WorkoutsManagePage.js"],"names":["_toConsumableArray","arr","Array","isArray","i","arr2","length","iter","Symbol","iterator","Object","prototype","toString","call","from","TypeError","ErrorAlert","lazy","useStyles","makeStyles","root","width","overflowX","table","minWidth","WorkoutsTable","workouts","clients","createWorkout","deleteWorkout","updateWorkout","alerts","useState","columns","data","state","setState","classes","useEffect","clientsLookUp","reduce","acc","cur","_id","firstName","lastName","title","field","lookup","type","filtering","className","options","pageSize","onRowClick","event","rowData","editable","onRowAdd","newData","Promise","resolve","setTimeout","prevState","push","onRowUpdate","oldData","indexOf","onRowDelete","id","splice","fallback","map","alert","msg","err","message","connect","loading","Spinner"],"mappings":"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","file":"static/js/WorkoutsManagePage.f7ae3151.chunk.js","sourcesContent":["import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","import React, { useState, useEffect, lazy, Suspense } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport \"moment-timezone\";\r\nimport MaterialTable from \"material-table\";\r\nconst ErrorAlert = lazy(() => import(\"./ErrorAlert\"));\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\",\r\n    overflowX: \"auto\"\r\n  },\r\n  table: {\r\n    minWidth: 400\r\n  }\r\n});\r\n\r\nexport default function WorkoutsTable({\r\n  workouts,\r\n  clients,\r\n  createWorkout,\r\n  deleteWorkout,\r\n  updateWorkout,\r\n  alerts\r\n}) {\r\n  const [state, setState] = useState({\r\n    columns: [],\r\n    data: []\r\n  });\r\n\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    const clientsLookUp = clients.reduce(\r\n      (acc, cur) => ({ ...acc, [cur._id]: cur.firstName + \" \" + cur.lastName }),\r\n      {}\r\n    );\r\n    setState({\r\n      columns: [\r\n        {\r\n          title: \"Name\",\r\n          field: \"client\",\r\n          lookup: clientsLookUp\r\n        },\r\n        { title: \"Date\", field: \"date\", type: \"date\" },\r\n        { title: \"Start\", field: \"startDate\", type: \"time\", filtering: false },\r\n        { title: \"End\", field: \"endDate\", type: \"time\", filtering: false },\r\n        { title: \"Workout\", field: \"notes\", filtering: false }\r\n      ],\r\n      data: workouts\r\n    });\r\n  }, [workouts, clients]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <MaterialTable\r\n        title=\"Workouts Mangament\"\r\n        className={classes.table}\r\n        columns={state.columns}\r\n        data={state.data}\r\n        options={{ pageSize: 10, filtering: true }}\r\n        onRowClick={(event, rowData) => {}}\r\n        editable={{\r\n          onRowAdd: newData =>\r\n            new Promise(resolve => {\r\n              setTimeout(() => {\r\n                createWorkout(newData);\r\n                resolve();\r\n\r\n                setState(prevState => {\r\n                  const data = [...prevState.data];\r\n                  data.push(newData);\r\n                  return { ...prevState, data };\r\n                });\r\n              }, 600);\r\n            }),\r\n          onRowUpdate: (newData, oldData) =>\r\n            new Promise(resolve => {\r\n              setTimeout(() => {\r\n                updateWorkout(newData);\r\n                resolve();\r\n                if (oldData) {\r\n                  setState(prevState => {\r\n                    const data = [...prevState.data];\r\n                    data[data.indexOf(oldData)] = newData;\r\n                    return { ...prevState, data };\r\n                  });\r\n                }\r\n              }, 600);\r\n            }),\r\n          onRowDelete: oldData =>\r\n            new Promise(resolve => {\r\n              setTimeout(() => {\r\n                deleteWorkout(oldData.id);\r\n                resolve();\r\n                setState(prevState => {\r\n                  const data = [...prevState.data];\r\n                  data.splice(data.indexOf(oldData), 1);\r\n                  return { ...prevState, data };\r\n                });\r\n              }, 600);\r\n            })\r\n        }}\r\n      />\r\n      {alerts ? (\r\n        <Suspense fallback={<div>Loading...</div>}>\r\n          {alerts.map(alert => {\r\n            return alert.msg.map(err => {\r\n              return <ErrorAlert message={err} />;\r\n            });\r\n          })}\r\n        </Suspense>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  createWorkout,\r\n  deleteWorkout,\r\n  updateWorkout\r\n} from \"../actions/workoutActions\";\r\nimport WorkoutsTable from \"../components/workoutsTable\";\r\nimport { Spinner } from \"./Spinner\";\r\n\r\nconst AllWorkoutsPage = ({\r\n  createWorkout,\r\n  deleteWorkout,\r\n  updateWorkout,\r\n\r\n  workouts,\r\n  clients,\r\n  loading,\r\n  alerts\r\n}) => {\r\n  return (\r\n    <div className=\"conatiner\">\r\n      {loading ? (\r\n        <Spinner />\r\n      ) : (\r\n        <WorkoutsTable\r\n          workouts={workouts}\r\n          clients={clients}\r\n          createWorkout={createWorkout}\r\n          deleteWorkout={deleteWorkout}\r\n          updateWorkout={updateWorkout}\r\n          alerts={alerts}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nAllWorkoutsPage.propTypes = {\r\n  createWorkout: PropTypes.func.isRequired,\r\n  deleteWorkout: PropTypes.func.isRequired,\r\n  updateWorkout: PropTypes.func.isRequired,\r\n  workouts: PropTypes.array.isRequired,\r\n  clients: PropTypes.array.isRequired,\r\n  loading: PropTypes.bool.isRequired,\r\n  alerts: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  workouts: state.workouts.workouts,\r\n  clients: state.clients.clients,\r\n  loading: state.workouts.loading,\r\n  alerts: state.alerts.alerts\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  createWorkout,\r\n  deleteWorkout,\r\n  updateWorkout\r\n})(AllWorkoutsPage);\r\n"],"sourceRoot":""}